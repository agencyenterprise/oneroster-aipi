openapi: "3.0.0"
info:
  version: "1.2"
  title: OneRoster AE API
servers:
  - url: https://{hostName}{basePath}
    description: The pattern for the Server URL should be configured for the actual server location.
    variables:
      "hostName":
        description: This is the hostname for the server and MUST be set to the actual service provider (the 1EdTech url is given as a default value).
        default: www.imsglobal.org
      "basePath":
        description: This is the base-path for the full URL and MUST be a part of the service endpoints.
        enum:
          - /ims/oneroster/gradebook/v1p2
          - /ims/oneroster/rostering/v1p2
          - /ims/oneroster/resources/v1p2
        default: /ims/oneroster/gradebook/v1p2
tags:
  - name: AssessmentLineItemsManagement
    description: |
      This enables the management of the assessment lineItems i.e. lineitems that are used to store results about tests/assessments and where these test/assessments are not aligned to a class.
  - name: AssessmentResultsManagement
    description: |
      This enables the management of the assessment results i.e. results that are used to store scores for tests/assessments and where these test/assessments are not aligned to a class.
  - name: CategoriesManagement
    description: |
      This enables the management of Categories i.e. collections of LineItems.
  - name: LineItemsManagement
    description: |
      This enables the management of lineItems i.e. the set of results for the assessment of some activity.
  - name: ResultsManagement
    description: |
      This enables the management of results i.e. the score allocated to a learner from the assessent of a learning activity. Results are collected as a set of 'lineItems'.
  - name: SchoolsManagement
    description: |
      This enables the management of information about schools with respect to scoreScales. A school is a type of 'org'. For this service this is the collection of operations that provide gradebook data in the context of a school identifier.
  - name: ScoreScalesManagement
    description: |
      This enables the management of scoreScales i.e. the set of scales for the results and lineItems.
  - name: ResourcesManagement
    description: |
      This enables the management of information about resources.
  - name: AcademicSessionsManagement
    description: |
      This enables the management of academic sessions i.e. periods of academic activity.
  - name: ClassesManagement
    description: |
      This enables the management of Classes i.e. scheduled learning of courses.
  - name: CoursesManagement
    description: |
      This enables the management of Courses i.e. programme of study.
  - name: DemographicsManagement
    description: |
      This enables the management of demographics information (each assigned to a specific user). The sourcedIds for the user and the demograohics records should be the same.
  - name: EnrollmentsManagement
    description: |
      This enables the management of the enrollments of users (teachers, students, etc.) on classes supplied by schools.
  - name: GradingPeriodsManagement
    description: |
      This enables the management of grading periods i.e. specific academic sessions.
  - name: OrgsManagement
    description: |
      This enables the management of orgs i.e. an organization involved in the learning in some form or other.
  - name: StudentsManagement
    description: |
      This enables the management of information about students (a student is a type of 'user').
  - name: TeachersManagement
    description: |
      This enables the management of information about teachers (a teacher is a type of 'user').
  - name: TermsManagement
    description: |
      This enables the management of information about terms (a term is a type of 'academicSession').
  - name: UsersManagement
    description: |
      This enables the management of information about users (including students and teachers).

paths:
  /assessmentLineItems:
    get:
      operationId: getAllAssessmentLineItems
      summary: The REST read request message for the getAllAssessmentLineItems() API call.
      tags:
        - AssessmentLineItemsManagement
      description: |
        Get all of the Assessment Line Items on the service provider.
      parameters:
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/assessment.readonly

  /assessmentLineItems/{sourcedId}:
    get:
      operationId: getAssessmentLineItem
      summary: The REST read request message for the getAssessmentLineItem() API call.
      tags:
        - AssessmentLineItemsManagement
      description: |
        Get a specific Assessment LineItem on the service provider. If the corresponding record cannot be located then an 'unknown' error code is returned.
      parameters:
        - name: sourcedId
          in: path
          description: |
            The unique identifier, GUID, for this assessment lineItem.
          required: true
          schema:
            type: string
          style: simple
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/assessment.readonly
    delete:
      operationId: deleteAssessmentLineItem
      summary: The REST delete request message for the deleteAssessmentLineItem() API call.
      tags:
        - AssessmentLineItemsManagement
      description: |
        Delete a specific Assessment LineItem on the service provider. If the corresponding record cannot be located then an 'unknown' error code is returned.
      parameters:
        - name: sourcedId
          in: path
          description: |
            The unique identifier, GUID, for the assessment lineItem to be deleted.
          required: true
          schema:
            type: string
          style: simple
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/assessment.delete
    put:
      operationId: putAssessmentLineItem
      summary: The REST create request message for the putAssessmentLineItem() API call.
      tags:
        - AssessmentLineItemsManagement
      description: |
        To create a new Assessment LineItem. The associated sourcedId for this new record is supplied by the requesting system.
      parameters:
        - name: sourcedId
          in: path
          description: |
            The unique identifier, GUID, to be allocated to this new assessment lineItem.
          required: true
          schema:
            type: string
          style: simple
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/assessment.createput
      requestBody:
        description: |
          The assessment lineItem data that is to be stored.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SingleAssessmentLineItemDType"
        required: true
  /assessmentResults:
    get:
      operationId: getAllAssessmentResults
      summary: The REST read request message for the getAllAssessmentResults() API call.
      tags:
        - AssessmentResultsManagement
      description: |
        Get all of the Assessment Results on the service provider.
      parameters:
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/assessment.readonly

  /assessmentResults/{sourcedId}:
    get:
      operationId: getAssessmentResult
      summary: The REST read request message for the getAssessmentResult() API call.
      tags:
        - AssessmentResultsManagement
      description: |
        Get a specific Assessment Result on the service provider. If the corresponding record cannot be located then an 'unknown' error code is returned.
      parameters:
        - name: sourcedId
          in: path
          description: |
            Tthe unique identifier, GUID, for this assessment result.
          required: true
          schema:
            type: string
          style: simple
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/assessment.readonly
    delete:
      operationId: deleteAssessmentResult
      summary: The REST delete request message for the deleteAssessmentResult() API call.
      tags:
        - AssessmentResultsManagement
      description: |
        Delete a specific Assessment Result on the service provider. If the corresponding record cannot be located then an 'unknown' error code is returned.
      parameters:
        - name: sourcedId
          in: path
          description: |
            The unique identifier, GUID, for the assessment result to be deleted.
          required: true
          schema:
            type: string
          style: simple
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/assessment.delete
    put:
      operationId: putAssessmentResult
      summary: The REST create request message for the putAssessmentResult() API call.
      tags:
        - AssessmentResultsManagement
      description: |
        To create a new Assessment Result. The associated sourcedId for this new record is supplied by the requesting system.
      parameters:
        - name: sourcedId
          in: path
          description: |
            The unique identifier, GUID, to be allocated to this new assessment result.
          required: true
          schema:
            type: string
          style: simple
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/assessment.createput
      requestBody:
        description: |
          The assessment result data that is to be stored.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SingleAssessmentResultDType"
        required: true
  /categories:
    get:
      operationId: getAllCategories
      summary: The REST read request message for the getAllCategories() API call.
      tags:
        - CategoriesManagement
      description: |
        Get all of the lineItem categories on the service provider.
      parameters:
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook.readonly
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook-core.readonly

  /categories/{sourcedId}:
    get:
      operationId: getCategory
      summary: The REST read request message for the getCategory() API call.
      tags:
        - CategoriesManagement
      description: |
        Get a specific lineItem category on the service provider. If the corresponding record cannot be located then an 'unknown' error code is returned.
      parameters:
        - name: sourcedId
          in: path
          description: |
            The unique identifier, GUID, for this category.
          required: true
          schema:
            type: string
          style: simple
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook.readonly
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook-core.readonly
    delete:
      operationId: deleteCategory
      summary: The REST delete request message for the deleteCategory() API call.
      tags:
        - CategoriesManagement
      description: |
        Delete a specific lineItem category on the service provider. If the corresponding record cannot be located then an 'unknown' error code is returned.
      parameters:
        - name: sourcedId
          in: path
          description: |
            The unique identifier, GUID, for the category to be deleted.
          required: true
          schema:
            type: string
          style: simple
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook.delete
    put:
      operationId: putCategory
      summary: The REST create request message for the putCategory() API call.
      tags:
        - CategoriesManagement
      description: |
        To create a new lineItem category. The associated sourcedId for this new record is supplied by the requesting system.
      parameters:
        - name: sourcedId
          in: path
          description: |
            The unique identifier, GUID, to be allocated to this new category.
          required: true
          schema:
            type: string
          style: simple
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook.createput
      requestBody:
        description: |
          The category data that is to be stored.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SingleCategoryDType"
        required: true

  /classes/{classSourcedId}/academicSessions/{academicSessionSourcedId}/results:
    post:
      operationId: postResultsForAcademicSessionForClass
      summary: The REST createbp request message for the postResultsForAcademicSessionForClass() API call.
      tags:
        - ClassesManagement
      description: |
        To create a set of results for a specific academic session and specific class. The responding system must return the set of sourcedIds that have been allocated to the newly created result records. If the corresponding class or academic session cannot be located then an 'unknown' error code is returned.
      parameters:
        - name: classSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the class.
          required: true
          schema:
            type: string
          style: simple
        - name: academicSessionSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the academic session.
          required: true
          schema:
            type: string
          style: simple
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook.createpost
      requestBody:
        description: |
          The set of result records to be created in response to this request. This includes an initial assignment of sourcedId so that the mapping between this and the actually assigned sourcedId can be reported.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResultSetDType"
        required: true

  /classes/{classSourcedId}/categories:
    get:
      operationId: getCategoriesForClass
      summary: The REST read request message for the getCategoriesForClass() API call.
      tags:
        - ClassesManagement
      description: |
        Get the set of categories on the service provider for a specific class. If the corresponding class cannot be located then an 'unknown' error code is returned.
      parameters:
        - name: classSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the class.
          required: true
          schema:
            type: string
          style: simple
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook.readonly

  /classes/{classSourcedId}/lineItems:
    get:
      operationId: getLineItemsForClass
      summary: The REST read request message for the getLineItemsForClass() API call.
      tags:
        - ClassesManagement
      description: |
        Get the set of lineItems on the service provider for a specific class. If the corresponding class cannot be located then an 'unknown' error code is returned.
      parameters:
        - name: classSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the class.
          required: true
          schema:
            type: string
          style: simple
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook.readonly
    post:
      operationId: postLineItemsForClass
      summary: The REST createbp request message for the postLineItemsForClass() API call.
      tags:
        - ClassesManagement
      description: |
        To create a set of lineItems for a specific class. The responding system must return the set of sourcedIds that have been allocated to the newly created lineItem records. If the corresponding class cannot be located then an 'unknown' error code is returned.
      parameters:
        - name: classSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the class.
          required: true
          schema:
            type: string
          style: simple
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook.createpost
      requestBody:
        description: |
          The set of lineItem records to be created in response to this request. This includes an initial assignment of sourcedId so that the mapping between this and the actually assigned sourcedId can be reported.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LineItemSetDType"
        required: true

  /classes/{classSourcedId}/lineItems/{lineItemSourcedId}/results:
    get:
      operationId: getResultsForLineItemForClass
      summary: The REST read request message for the getResultsForLineItemForClass() API call.
      tags:
        - ClassesManagement
      description: |
        Get the set of results on the service provider for a specific lineItem and for a specific class. If the corresponding class cannot be located then an 'unknown' error code is returned.
      parameters:
        - name: classSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the class.
          required: true
          schema:
            type: string
          style: simple
        - name: lineItemSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the lineItem.
          required: true
          schema:
            type: string
          style: simple
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook.readonly

  /classes/{classSourcedId}/results:
    get:
      operationId: getResultsForClass
      summary: The REST read request message for the getResultsForClass() API call.
      tags:
        - ClassesManagement
      description: |
        Get the set of results on the service provider for a specific class. If the corresponding class cannot be located then an 'unknown' error code is returned.
      parameters:
        - name: classSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the class.
          required: true
          schema:
            type: string
          style: simple
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook.readonly

  /classes/{classSourcedId}/scoreScales:
    get:
      operationId: getScoreScalesForClass
      summary: The REST read request message for the getScoreScalesForClass() API call.
      tags:
        - ClassesManagement
      description: |
        Get the set of scoreScales on the service provider for a specific class. If the corresponding class cannot be located then an 'unknown' error code is returned.
      parameters:
        - name: classSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the class.
          required: true
          schema:
            type: string
          style: simple
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook.readonly

  /classes/{classSourcedId}/students/{studentSourcedId}/results:
    get:
      operationId: getResultsForStudentForClass
      summary: The REST read request message for the getResultsForStudentForClass() API call.
      tags:
        - ClassesManagement
      description: |
        Get the set of results on the service provider for a specific student and for a specific class. If the corresponding class cannot be located then an 'unknown' error code is returned.
      parameters:
        - name: classSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the class.
          required: true
          schema:
            type: string
          style: simple
        - name: studentSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the student.
          required: true
          schema:
            type: string
          style: simple
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook.readonly

  /lineItems:
    get:
      operationId: getAllLineItems
      summary: The REST read request message for the getAllLineItems() API call.
      tags:
        - LineItemsManagement
      description: |
        Get all of the Line Items on the service provider.
      parameters:
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook.readonly
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook-core.readonly

  /lineItems/{lineItemSourcedId}/results:
    post:
      operationId: postResultsForLineItem
      summary: The REST createbp request message for the postResultsForLineItem() API call.
      tags:
        - LineItemsManagement
      description: |
        To create a set of results for a specific lineItem. The responding system must return the set of sourcedIds that have been allocated to the newly created result records.
      parameters:
        - name: lineItemSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the lineItem.
          required: true
          schema:
            type: string
          style: simple
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook.createpost
      requestBody:
        description: |
          The set of result records to be created in response to this request. This includes an initial assignment of sourcedId so that the mapping between this and the actually assigned sourcedId can be reported.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResultSetDType"
        required: true

  /lineItems/{sourcedId}:
    get:
      operationId: getLineItem
      summary: The REST read request message for the getLineItem() API call.
      tags:
        - LineItemsManagement
      description: |
        Get a specific LineItem on the service provider. If the corresponding record cannot be located then an 'unknown' error code is returned.
      parameters:
        - name: sourcedId
          in: path
          description: |
            The unique identifier, GUID, for this lineItem.
          required: true
          schema:
            type: string
          style: simple
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook.readonly
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook-core.readonly
    delete:
      operationId: deleteLineItem
      summary: The REST delete request message for the deleteLineItem() API call.
      tags:
        - LineItemsManagement
      description: |
        Delete a specific lineItem on the service provider. If the corresponding record cannot be located then an 'unknown' error code is returned.
      parameters:
        - name: sourcedId
          in: path
          description: |
            The unique identifier, GUID, for the lineItem to be deleted.
          required: true
          schema:
            type: string
          style: simple
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook.delete
    put:
      operationId: putLineItem
      summary: The REST create request message for the putLineItem() API call.
      tags:
        - LineItemsManagement
      description: |
        To create a new lineItem. The associated sourcedId for this new record is supplied by the requesting system.
      parameters:
        - name: sourcedId
          in: path
          description: |
            The unique identifier, GUID, to be allocated to this new lineItem.
          required: true
          schema:
            type: string
          style: simple
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook.createput
      requestBody:
        description: |
          The lineItem data that is to be stored.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SingleLineItemDType"
        required: true

  /results:
    get:
      operationId: getAllResults
      summary: The REST read request message for the getAllResults() API call.
      tags:
        - ResultsManagement
      description: |
        Get all of the results on the service provider.
      parameters:
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook.readonly
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook-core.readonly

  /results/{sourcedId}:
    get:
      operationId: getResult
      summary: The REST read request message for the getResult() API call.
      tags:
        - ResultsManagement
      description: |
        Get a specific result on the service provider. If the corresponding record cannot be located then an 'unknown' error code is returned.
      parameters:
        - name: sourcedId
          in: path
          description: |
            The unique identifier, GUID, for this result.
          required: true
          schema:
            type: string
          style: simple
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook.readonly
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook-core.readonly
    delete:
      operationId: deleteResult
      summary: The REST delete request message for the deleteResult() API call.
      tags:
        - ResultsManagement
      description: |
        Delete a specific result on the service provider. If the corresponding record cannot be located then an 'unknown' error code is returned.
      parameters:
        - name: sourcedId
          in: path
          description: |
            The unique identifier, GUID, for the result to be deleted.
          required: true
          schema:
            type: string
          style: simple
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook.delete
    put:
      operationId: putResult
      summary: The REST create request message for the putResult() API call.
      tags:
        - ResultsManagement
      description: |
        To create a new result. The associated sourcedId for this new record is supplied by the requesting system.
      parameters:
        - name: sourcedId
          in: path
          description: |
            The unique identifier, GUID, to be allocated to this new result.
          required: true
          schema:
            type: string
          style: simple
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook.createput
      requestBody:
        description: |
          The result data that is to be stored.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SingleResultDType"
        required: true

  /schools/{schoolSourcedId}/lineItems:
    post:
      operationId: postLineItemsForSchool
      summary: The REST createbp request message for the postLineItemsForSchool() API call.
      tags:
        - SchoolsManagement
      description: |
        To create a set of lineItems for a specific school.  The responding system must return the set of sourcedIds that have been allocated to the newly created lineItem records.
      parameters:
        - name: schoolSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the school.
          required: true
          schema:
            type: string
          style: simple
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook.createpost
      requestBody:
        description: |
          The set of lineItem records to be created in response to this request. This includes an initial assignment of sourcedId so that the mapping between this and the actually assigned sourcedId can be reported.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LineItemSetDType"
        required: true

  /schools/{schoolSourcedId}/scoreScales:
    get:
      operationId: getScoreScalesForSchool
      summary: The REST read request message for the getScoreScalesForSchool() API call.
      tags:
        - SchoolsManagement
      description: |
        Get the set of scoreScales on the service provider for a specific school. If the corresponding school cannot be located then an 'unknown' error code is returned.
      parameters:
        - name: schoolSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the school.
          required: true
          schema:
            type: string
          style: simple
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook.readonly

  /scoreScales:
    get:
      operationId: getAllScoreScales
      summary: The REST read request message for the getAllScoreScales() API call.
      tags:
        - ScoreScalesManagement
      description: |
        Get all of the ScoreScales on the service provider.
      parameters:
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook.readonly
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook-core.readonly

  /scoreScales/{sourcedId}:
    get:
      operationId: getScoreScale
      summary: The REST read request message for the getScoreScale() API call.
      tags:
        - ScoreScalesManagement
      description: |
        Get a specific scoreScale on the service provider. If the corresponding record cannot be located then an 'unknown' error code is returned.
      parameters:
        - name: sourcedId
          in: path
          description: |
            The unique identifier, GUID, for this scoreScale.
          required: true
          schema:
            type: string
          style: simple
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook.readonly
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook-core.readonly
    delete:
      operationId: deleteScoreScale
      summary: The REST delete request message for the deleteScoreScale() API call.
      tags:
        - ScoreScalesManagement
      description: |
        Delete a specific scoreScale on the service provider. If the corresponding record cannot be located then an 'unknown' error code is returned.
      parameters:
        - name: sourcedId
          in: path
          description: |
            The unique identifier, GUID, for the scoreScale to be deleted.
          required: true
          schema:
            type: string
          style: simple
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook.delete
    put:
      operationId: putScoreScale
      summary: The REST create request message for the putScoreScale() API call.
      tags:
        - ScoreScalesManagement
      description: |
        To create a new scoreScale. The associated sourcedId for this new record is supplied by the requesting system.
      parameters:
        - name: sourcedId
          in: path
          description: |
            The unique identifier, GUID, to be allocated to this new scoreScale.
          required: true
          schema:
            type: string
          style: simple
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook.createput
      requestBody:
        description: |
          The scoreScale data that is to be stored.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SingleScoreScaleDType"
        required: true

  /academicSessions:
    get:
      operationId: getAllAcademicSessions
      summary: The REST read request message for the getAllAcademicSessions() API call.
      tags:
        - AcademicSessionsManagement
      description: |
        To read, get, a collection of academic sessions i.e. all academic sessions.
      parameters:
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster-core.readonly

  /academicSessions/{sourcedId}:
    get:
      operationId: getAcademicSession
      summary: The REST read request message for the getAcademicSession() API call.
      tags:
        - AcademicSessionsManagement
      description: |
        To read, get, a specific academic session. If the specified academic session cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: sourcedId
          in: path
          description: |
            The unique identifier, GUID, for this academic session.
          required: true
          schema:
            type: string
          style: simple
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster-core.readonly

  /classes:
    get:
      operationId: getAllClasses
      summary: The REST read request message for the getAllClasses() API call.
      tags:
        - ClassesManagement
      description: |
        To read, get, a collection of classes i.e. all classes.
      parameters:
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster-core.readonly

  /classes/{classSourcedId}/students:
    get:
      operationId: getStudentsForClass
      summary: The REST read request message for the getStudentsForClass() API call.
      tags:
        - ClassesManagement
      description: |
        To read, get, the collection of students associated with a specific class. If the specified class cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: classSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the class.
          required: true
          schema:
            type: string
          style: simple
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly

  /classes/{classSourcedId}/teachers:
    get:
      operationId: getTeachersForClass
      summary: The REST read request message for the getTeachersForClass() API call.
      tags:
        - ClassesManagement
      description: |
        To read, get, the collection of teachers associated with a specific class. If the specified class cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: classSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the class.
          required: true
          schema:
            type: string
          style: simple
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly

  /classes/{sourcedId}:
    get:
      operationId: getClass
      summary: The REST read request message for the getClass() API call.
      tags:
        - ClassesManagement
      description: |
        To read, get, a specific class.  If the specified class cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: sourcedId
          in: path
          description: |
            The unique identifier, GUID, for this class.
          required: true
          schema:
            type: string
          style: simple
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster-core.readonly

  /courses:
    get:
      operationId: getAllCourses
      summary: The REST read request message for the getAllCourses() API call.
      tags:
        - CoursesManagement
      description: |
        To read, get, a collection of courses i.e. all courses.
      parameters:
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster-core.readonly

  /courses/{courseSourcedId}/classes:
    get:
      operationId: getClassesForCourse
      summary: The REST read request message for the getClassesForCourse() API call.
      tags:
        - CoursesManagement
      description: |
        To get the set of classes related to a specific course.  If the specified course cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: courseSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the specific course.
          required: true
          schema:
            type: string
          style: simple
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly

  /courses/{sourcedId}:
    get:
      operationId: getCourse
      summary: The REST read request message for the getCourse() API call.
      tags:
        - CoursesManagement
      description: |
        To read, get, a specific course.  If the specified course cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: sourcedId
          in: path
          description: |
            The unique identifier, GUID, for this course.
          required: true
          schema:
            type: string
          style: simple
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster-core.readonly

  /demographics:
    get:
      operationId: getAllDemographics
      summary: The REST read request message for the getAllDemographics() API call.
      tags:
        - DemographicsManagement
      description: |
        To read, get, a collection of demographics i.e. all demographics.
      parameters:
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster-demographics.readonly

  /demographics/{sourcedId}:
    get:
      operationId: getDemographics
      summary: The REST read request message for the getDemographics() API call.
      tags:
        - DemographicsManagement
      description: |
        To read, get, a specific user demographics. If the specified user and/or demographics recrds cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: sourcedId
          in: path
          description: |
            The unique identifier, GUID, for this user demographics.
          required: true
          schema:
            type: string
          style: simple
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster-demographics.readonly

  /enrollments:
    get:
      operationId: getAllEnrollments
      summary: The REST read request message for the getAllEnrollments() API call.
      tags:
        - EnrollmentsManagement
      description: |
        To read, get, a collection of enrollments i.e. all enrollments.
      parameters:
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster-core.readonly

  /enrollments/{sourcedId}:
    get:
      operationId: getEnrollment
      summary: The REST read request message for the getEnrollment() API call.
      tags:
        - EnrollmentsManagement
      description: |
        To read, get, a specific enrollment. If the specified enrollment cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: sourcedId
          in: path
          description: |
            The unique identifier, GUID, for this enrollment.
          required: true
          schema:
            type: string
          style: simple
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster-core.readonly

  /gradingPeriods:
    get:
      operationId: getAllGradingPeriods
      summary: The REST read request message for the getAllGradingPeriods() API call.
      tags:
        - GradingPeriodsManagement
      description: |
        To read, get, a collection of grading periods i.e. all academic sessions.
      parameters:
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster-core.readonly

  /gradingPeriods/{sourcedId}:
    get:
      operationId: getGradingPeriod
      summary: The REST read request message for the getGradingPeriod() API call.
      tags:
        - GradingPeriodsManagement
      description: |
        To read, get, a specific grading period. If the specified grading period cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: sourcedId
          in: path
          description: |
            The unique identifier, GUID, for this grading period.
          required: true
          schema:
            type: string
          style: simple
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster-core.readonly

  /orgs:
    get:
      operationId: getAllOrgs
      summary: The REST read request message for the getAllOrgs() API call.
      tags:
        - OrgsManagement
      description: |
        To read, get, a collection of orgs i.e. all orgs.
      parameters:
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster-core.readonly

  /orgs/{sourcedId}:
    get:
      operationId: getOrg
      summary: The REST read request message for the getOrg() API call.
      tags:
        - OrgsManagement
      description: |
        To read, get, a specific org. If the specified org cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: sourcedId
          in: path
          description: |
            The unique identifier, GUID, for this org.
          required: true
          schema:
            type: string
          style: simple
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster-core.readonly

  /schools:
    get:
      operationId: getAllSchools
      summary: The REST read request message for the getAllSchools() API call.
      tags:
        - SchoolsManagement
      description: |
        To read, get, a collection of schools i.e. all schools.
      parameters:
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster-core.readonly

  /schools/{schoolSourcedId}/classes:
    get:
      operationId: getClassesForSchool
      summary: The REST read request message for the getClassesForSchool() API call.
      tags:
        - SchoolsManagement
      description: |
        To read, get, the collection of classes associated with a specific school. If the specified school cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: schoolSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the specific school.
          required: true
          schema:
            type: string
          style: simple
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly

  /schools/{schoolSourcedId}/classes/{classSourcedId}/enrollments:
    get:
      operationId: getEnrollmentsForClassInSchool
      summary: The REST read request message for the getEnrollmentsForClassInSchool() API call.
      tags:
        - SchoolsManagement
      description: |
        To read, get, the collection of enrollments associated with a specific class at a specific school. If the specified school and/or class cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: schoolSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the school.
          required: true
          schema:
            type: string
          style: simple
        - name: classSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the class.
          required: true
          schema:
            type: string
          style: simple
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly

  /schools/{schoolSourcedId}/classes/{classSourcedId}/students:
    get:
      operationId: getStudentsForClassInSchool
      summary: The REST read request message for the getStudentsForClassInSchool() API call.
      tags:
        - SchoolsManagement
      description: |
        To read, get, the collection of students associated with a specific class at a specific school. If the specified school and/or class cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: schoolSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the specific school.
          required: true
          schema:
            type: string
          style: simple
        - name: classSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the class.
          required: true
          schema:
            type: string
          style: simple
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly

  /schools/{schoolSourcedId}/classes/{classSourcedId}/teachers:
    get:
      operationId: getTeachersForClassInSchool
      summary: The REST read request message for the getTeachersForClassInSchool() API call.
      tags:
        - SchoolsManagement
      description: |
        To read, get, the collection of teachers associated with a specific class at a specific school. If the specified school and/or class cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: schoolSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the specific school.
          required: true
          schema:
            type: string
          style: simple
        - name: classSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the class.
          required: true
          schema:
            type: string
          style: simple
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly

  /schools/{schoolSourcedId}/courses:
    get:
      operationId: getCoursesForSchool
      summary: The REST read request message for the getCoursesForSchool() API call.
      tags:
        - SchoolsManagement
      description: |
        To read, get, the collection of courses associated with a specific school. If the specified school cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: schoolSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the school.
          required: true
          schema:
            type: string
          style: simple
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly

  /schools/{schoolSourcedId}/enrollments:
    get:
      operationId: getEnrollmentsForSchool
      summary: The REST read request message for the getEnrollmentsForSchool() API call.
      tags:
        - SchoolsManagement
      description: |
        To read, get, the collection of enrollments associated with a specific school. If the specified school cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: schoolSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the specific school.
          required: true
          schema:
            type: string
          style: simple
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly

  /schools/{schoolSourcedId}/students:
    get:
      operationId: getStudentsForSchool
      summary: The REST read request message for the getStudentsForSchool() API call.
      tags:
        - SchoolsManagement
      description: |
        To read, get, the collection of students associated with a specific school. If the specified school cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: schoolSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the specific school.
          required: true
          schema:
            type: string
          style: simple
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly

  /schools/{schoolSourcedId}/teachers:
    get:
      operationId: getTeachersForSchool
      summary: The REST read request message for the getTeachersForSchool() API call.
      tags:
        - SchoolsManagement
      description: |
        To read, get, the collection of teachers associated with a specific school. If the specified school cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: schoolSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the specific school.
          required: true
          schema:
            type: string
          style: simple
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly

  /schools/{schoolSourcedId}/terms:
    get:
      operationId: getTermsForSchool
      summary: The REST read request message for the getTermsForSchool() API call.
      tags:
        - SchoolsManagement
      description: |
        To read, get, the collection of terms associated with a specific school. If the specified school cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: schoolSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the specific school.
          required: true
          schema:
            type: string
          style: simple
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly

  /schools/{sourcedId}:
    get:
      operationId: getSchool
      summary: The REST read request message for the getSchool() API call.
      tags:
        - SchoolsManagement
      description: |
        To read, get, a specific school. If the specified school cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: sourcedId
          in: path
          description: |
            The unique identifier, GUID, for this school.
          required: true
          schema:
            type: string
          style: simple
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster-core.readonly

  /students:
    get:
      operationId: getAllStudents
      summary: The REST read request message for the getAllStudents() API call.
      tags:
        - StudentsManagement
      description: |
        To read, get, a collection of students i.e. all students.
      parameters:
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster-core.readonly

  /students/{sourcedId}:
    get:
      operationId: getStudent
      summary: The REST read request message for the getStudent() API call.
      tags:
        - StudentsManagement
      description: |
        To read, get, a specific student. If the specified student cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: sourcedId
          in: path
          description: |
            The unique identifier, GUID, for this student.
          required: true
          schema:
            type: string
          style: simple
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster-core.readonly

  /students/{studentSourcedId}/classes:
    get:
      operationId: getClassesForStudent
      summary: The REST read request message for the getClassesForStudent() API call.
      tags:
        - StudentsManagement
      description: |
        To get the set of classes related to a specific student. If the specified student cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: studentSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the specific student.
          required: true
          schema:
            type: string
          style: simple
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly

  /teachers:
    get:
      operationId: getAllTeachers
      summary: The REST read request message for the getAllTeachers() API call.
      tags:
        - TeachersManagement
      description: |
        To read, get, a collection of teachers i.e. all teachers.
      parameters:
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster-core.readonly

  /teachers/{sourcedId}:
    get:
      operationId: getTeacher
      summary: The REST read request message for the getTeacher() API call.
      tags:
        - TeachersManagement
      description: |
        To read, get, a specific teacher. If the specified teacher cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: sourcedId
          in: path
          description: |
            The unique identifier, GUID, for this teacher.
          required: true
          schema:
            type: string
          style: simple
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster-core.readonly

  /teachers/{teacherSourcedId}/classes:
    get:
      operationId: getClassesForTeacher
      summary: The REST read request message for the getClassesForTeacher() API call.
      tags:
        - TeachersManagement
      description: |
        To get the set of classes related to a specific teacher. If the specified teacher cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: teacherSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the specific teacher.
          required: true
          schema:
            type: string
          style: simple
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly

  /terms:
    get:
      operationId: getAllTerms
      summary: The REST read request message for the getAllTerms() API call.
      tags:
        - TermsManagement
      description: |
        To read, get, a collection of terms i.e. all terms.
      parameters:
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster-core.readonly

  /terms/{sourcedId}:
    get:
      operationId: getTerm
      summary: The REST read request message for the getTerm() API call.
      tags:
        - TermsManagement
      description: |
        To read, get, a specific term. If the specified term cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: sourcedId
          in: path
          description: |
            The unique identifier, GUID, for this term.
          required: true
          schema:
            type: string
          style: simple
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster-core.readonly

  /terms/{termSourcedId}/classes:
    get:
      operationId: getClassesForTerm
      summary: The REST read request message for the getClassesForTerm() API call.
      tags:
        - TermsManagement
      description: |
        To get the set of classes related to a specific term. If the specified term cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: termSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the specific term.
          required: true
          schema:
            type: string
          style: simple
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly

  /terms/{termSourcedId}/gradingPeriods:
    get:
      operationId: getGradingPeriodsForTerm
      summary: The REST read request message for the getGradingPeriodsForTerm() API call.
      tags:
        - TermsManagement
      description: |
        To get the set of grading periods related to a specific term. If the specified term cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: termSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the specific term.
          required: true
          schema:
            type: string
          style: simple
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly

  /users:
    get:
      operationId: getAllUsers
      summary: The REST read request message for the getAllUsers() API call.
      tags:
        - UsersManagement
      description: |
        To read, get, a collection of users i.e. all users (including students and teachers).
      parameters:
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster-core.readonly

  /users/{sourcedId}:
    get:
      operationId: getUser
      summary: The REST read request message for the getUser() API call.
      tags:
        - UsersManagement
      description: |
        To read, get, a specific user. If the specified user cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: sourcedId
          in: path
          description: |
            The unique identifier, GUID, for this user.
          required: true
          schema:
            type: string
          style: simple
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster-core.readonly

  /users/{userSourcedId}/classes:
    get:
      operationId: getClassesForUser
      summary: The REST read request message for the getClassesForUser() API call.
      tags:
        - UsersManagement
      description: |
        To get the set of classes related to a specific user. If the specified user cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: userSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the specific user.
          required: true
          schema:
            type: string
          style: simple
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly

  /classes/{classSourcedId}/resources:
    get:
      operationId: getResourcesForClass
      summary: The REST read request message for the getResourcesForClass() API call.
      tags:
        - ClassesManagement
      description: |
        To read, get, the collection of resources associated to the specified class. This is the OneRoster description of the resources and not the actual resources. If the specified class cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: classSourcedId
          in: path
          description: |
            The unique identifier, GUID, for this class.
          required: true
          schema:
            type: string
          style: simple
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/resource.readonly

  /courses/{courseSourcedId}/resources:
    get:
      operationId: getResourcesForCourse
      summary: The REST read request message for the getResourcesForCourse() API call.
      tags:
        - CoursesManagement
      description: |
        To read, get, the collection of resources associated to the specified course. This is the OneRoster description of the resources and not the actual resources. If the specified class cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: courseSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the course.
          required: true
          schema:
            type: string
          style: simple
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/resource.readonly

  /resources:
    get:
      operationId: getAllResources
      summary: The REST read request message for the getAllResources() API call.
      tags:
        - ResourcesManagement
      description: |
        To read, get, a collection of resources i.e. all resources. This is the OneRoster description of the resources and not the actual resources.
      parameters:
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/resource.readonly
            - https://purl.imsglobal.org/spec/or/v1p2/scope/resource-core.readonly

  /resources/{sourcedId}:
    get:
      operationId: getResource
      summary: The REST read request message for the getResource() API call.
      tags:
        - ResourcesManagement
      description: |
        To read, get, a specific OneRoster resource description. If the specified class cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: sourcedId
          in: path
          description: |
            The unique identifier, GUID, for the resource.
          required: true
          schema:
            type: string
          style: simple
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/resource.readonly
            - https://purl.imsglobal.org/spec/or/v1p2/scope/resource-core.readonly

  /users/{userSourcedId}/resources:
    get:
      operationId: getResourcesForUser
      summary: The REST read request message for the getResourcesForUser() API call.
      tags:
        - UsersManagement
      description: |
        To read, get, the collection of resources available to the specified user. This is the OneRoster description of the resources and not the actual resources. If the specified user cannot be identified within the service provider then a status code of 'unknownobject' must be reported.
      parameters:
        - name: userSourcedId
          in: path
          description: |
            The unique identifier, GUID, for the user.
          required: true
          schema:
            type: string
          style: simple
        - name: limit
          in: query
          description: |
            To define the download segmentation value i.e. the maximum number of records to be contained in the response.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
          allowEmptyValue: false
          style: form
        - name: offset
          in: query
          description: |
            The number of the first record to be supplied in the segmented response message.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
          allowEmptyValue: false
          style: form
        - name: sort
          in: query
          description: |
            Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: orderBy
          in: query
          description: |
            The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          allowEmptyValue: false
          style: form
        - name: filter
          in: query
          description: |
            The filtering rules to be applied when identifying the records to be supplied in the response message.
          required: false
          schema:
            type: string
          allowEmptyValue: false
          style: form
        - name: fields
          in: query
          description: |
            To identify the range of fields that should be supplied in the response message.
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
          style: form
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/resource.readonly

#####################################################################################
#                               Components                                          #
#####################################################################################
components:
  securitySchemes:
    OAuth2CC:
      type: oauth2
      description: |
        OAuth 2 Client Credentials (as per the requirements in the IMS Security Framework) is to be used.
      flows:
        clientCredentials:
          tokenUrl: https://www.imsglobal.org/oauth2token
          scopes:
            https://purl.imsglobal.org/spec/or/v1p2/scope/assessment.delete: Access to the set of assessment operations that permit an object to be deleted.
            https://purl.imsglobal.org/spec/or/v1p2/scope/assessment.readonly: Access to ALL of the assessment read operations.
            https://purl.imsglobal.org/spec/or/v1p2/scope/assessment.createput: Access to all of the write assessment operations that permit the creation of a new single object in which the 'sourcedId' is supplied.
            https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook.delete: Access to the set of gradebook operations that permit an object to be deleted.
            https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook.readonly: Access to ALL of the gradebook read operations.
            https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook-core.readonly: Access to the set of core read operations i.e. reading of all objects or a single object.
            https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook.createpost: Access to the set of write operations that permit the creation of objects where the server allocates the 'sourcedIds'.
            https://purl.imsglobal.org/spec/or/v1p2/scope/gradebook.createput: Access to all of the gradebook write operations that permit the creation of a new single object in which the 'sourcedId' is supplied.
  schemas:
    AcadSessionGUIDRefDType:
      description: |
        This is the container for reference to a OneRoster 'Academic Session' object that has an allocated sourcedId (GUID).
      type: object
      required:
        - href
        - sourcedId
        - type
      properties:
        href:
          description: The URI for the type of object being referenced. Model Primitive Datatype = AnyURI.
          type: string
          format: uri
        sourcedId:
          description: The globally unique identifier of the object being referenced. Model Primitive Datatype = String.
          type: string
        type:
          description: |
            The type of object being referenced i.e. an 'academicSession'.
          type: string
          enum:
            - academicSession
      additionalProperties: false
    AssessmentLineItemDType:
      description: |
        This is the container for the definition of an assessment lineItem. An assessment lineItem is a collection of results for a set of students who are completing an assignment.
      type: object
      required:
        - sourcedId
        - status
        - dateLastModified
        - title
      properties:
        sourcedId:
          description: The sourcedId of the object. All objects MUST be identified by a Source Identifier. This is a GUID System ID for an object. This is the GUID that SYSTEMS will refer to when making API calls, or when needing to identify an object. It is RECOMMENDED that systems are able to map whichever local ids (e.g. database key fields) they use to SourcedId. The sourcedId of an object is considered an addressable property of an entity and as such will not be treated as Personally Identifiable Information (PII) by certified products. Therefore, as a part of certification, vendors will be required to declare that they will notify customers via documentation or other formal and documented agreement that sourcedIds should never contain PII in general, but particularly users. This means that if a customer includes a student name in an enrollment.sourcedId, it will not fall to any certified product to protect the enrollment.sourcedId as PII, or even the userSourcedId field in the enrollment record. Model Primitive Datatype = String.
          type: string
        status:
          description: |
            All objects MUST BE either 'active' or 'tobedeleted'. Something which is flagged 'tobedeleted' is to be considered safe to delete. Systems can delete records that are flagged as such if they wish, but they are not under any compulsion to do so. In v1.1 the enumeration value of 'inactive' was removed and so for backwards compatibility all such marked objects should be interpreted as 'tobedeleted'.
          type: string
          enum:
            - active
            - tobedeleted
        dateLastModified:
          description: All objects MUST be annotated with the dateTime upon which they were last modified. This enables requesters to query for just the latest objects. DateTimes MUST be expressed in W3C profile of [ISO 8601] and MUST contain the UTC timezone. Model Primitive Datatype = DateTime.
          type: string
          format: date-time
        metadata:
          $ref: "#/components/schemas/MetadataDType"
        title:
          description: The title, human readable, for the assessment lineItem.  This should allow the assessment lineItem to be distinguished from its peer assessment lineItems. Model Primitive Datatype = NormalizedString.
          type: string
        description:
          description: A human readable description of the usage of the assessment lineItem. Model Primitive Datatype = String.
          type: string
        class:
          $ref: "#/components/schemas/ClassGUIDRefDType"
        parentAssessmentLineItem:
          $ref: "#/components/schemas/AssessmentLineItemGUIDRefDType"
        scoreScale:
          $ref: "#/components/schemas/ScoreScaleGUIDRefDType"
        resultValueMin:
          description: The minimum value (numeric) that can be assigned to the score attribute in a result. The score scale mapping should be used to map to other scores. Model Primitive Datatype = Float.
          type: number
          format: float
        resultValueMax:
          description: The maximum value (numeric) that can be assigned to the score attribute in a result. The score scale mapping should be used to map to other scores. Model Primitive Datatype = Float.
          type: number
          format: float
        learningObjectiveSet:
          description: |
            The set of identifiers for the learning objectives to which this assessment is aligned. Any number groups of learning objectives can be assigned.
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/LearningObjectiveSetDType"
      additionalProperties: false
    AssessmentLineItemGUIDRefDType:
      description: |
        This is the container for reference to a OneRoster 'AssessmentLineItem' object that has an allocated sourcedId (GUID).
      type: object
      required:
        - href
        - sourcedId
        - type
      properties:
        href:
          description: The URI for the type of object being referenced. Model Primitive Datatype = AnyURI.
          type: string
          format: uri
        sourcedId:
          description: The globally unique identifier of the object being referenced. Model Primitive Datatype = String.
          type: string
        type:
          description: |
            The type of object being referenced i.e. an 'assessmentLineItem'.
          type: string
          enum:
            - assessmentLineItem
      additionalProperties: false
    AssessmentLineItemSetDType:
      description: |
        This is the container for a collection of assessment lineItem instances for a message payload. This may be empty if no instances are found that sustain the applied query constraints. The order is not significant.
      type: object
      properties:
        assessmentLineItems:
          description: |
            The collection of assessment lineItem instances. The order is not significant. The corresponding query constraints may result in no instances being returned.
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/AssessmentLineItemDType"
      additionalProperties: false
    AssessmentResultDType:
      description: |
        This is the container for the AssessmentResult record.  An assessment result consists of the assigned score plus the context for that score.
      type: object
      required:
        - sourcedId
        - status
        - dateLastModified
        - assessmentLineItem
        - student
        - scoreDate
        - scoreStatus
      properties:
        sourcedId:
          description: The sourcedId of the object. All objects MUST be identified by a Source Identifier. This is a GUID System ID for an object. This is the GUID that SYSTEMS will refer to when making API calls, or when needing to identify an object. It is RECOMMENDED that systems are able to map whichever local ids (e.g. database key fields) they use to SourcedId. The sourcedId of an object is considered an addressable property of an entity and as such will not be treated as Personally Identifiable Information (PII) by certified products. Therefore, as a part of certification, vendors will be required to declare that they will notify customers via documentation or other formal and documented agreement that sourcedIds should never contain PII in general, but particularly users. This means that if a customer includes a student name in an enrollment.sourcedId, it will not fall to any certified product to protect the enrollment.sourcedId as PII, or even the userSourcedId field in the enrollment record. Model Primitive Datatype = String.
          type: string
        status:
          description: |
            All objects MUST BE either 'active' or 'tobedeleted'. Something which is flagged 'tobedeleted' is to be considered safe to delete. Systems can delete records that are flagged as such if they wish, but they are not under any compulsion to do so. In v1.1 the enumeration value of 'inactive' was removed and so for backwards compatibility all such marked objects should be interpreted as 'tobedeleted'.
          type: string
          enum:
            - active
            - tobedeleted
        dateLastModified:
          description: All objects MUST be annotated with the dateTime upon which they were last modified. This enables requesters to query for just the latest objects. DateTimes MUST be expressed in W3C profile of [ISO 8601] and MUST contain the UTC timezone. Model Primitive Datatype = DateTime.
          type: string
          format: date-time
        metadata:
          $ref: "#/components/schemas/MetadataDType"
        assessmentLineItem:
          $ref: "#/components/schemas/AssessmentLineItemGUIDRefDType"
        student:
          $ref: "#/components/schemas/UserGUIDRefDType"
        score:
          description: The score for the result. If a scoreScale is assigned then the value must align with the scale. Model Primitive Datatype = Float.
          type: number
          format: float
        textScore:
          description: An optional non-numeric score value. If a scoreScale is assigned then the value must align with the scale. Model Primitive Datatype = NormalizedString.
          type: string
        scoreDate:
          description: The date at which the score is assigned or there is an update to the result e.g. change in the 'scoreStatus'.. The format is YYYY-MM-DD as defined in [ISO 8601]. Model Primitive Datatype = Date.
          type: string
          format: date
        scoreScale:
          $ref: "#/components/schemas/ScoreScaleGUIDRefDType"
        scorePercentile:
          description: The percentile rank of a score is the percentage of scores in its frequency distribution that are equal to or lower than it. Model Primitive Datatype = Float.
          type: number
          format: float
        scoreStatus:
          description: |
            The status of the score. The value is from an extensible enumerated vocabulary.
          anyOf:
            - description: The data-type that enables the score status enumerated vocabulary to be extended. Model Primitive Datatype = NormalizedString.
              type: string
              pattern: "(ext:)[a-zA-Z0-9\\.\\-_]+"
            - enum:
                - exempt
                - fully graded
                - not submitted
                - partially graded
                - submitted
              type: string
        comment:
          description: A human readable comment about the score. Model Primitive Datatype = String.
          type: string
        learningObjectiveSet:
          description: |
            The set of identifiers for the learning objectives to which this result is aligned. Any number groups of learning objectives can be assigned.
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/LearningObjectiveScoreSetDType"
        inProgress:
          description: |
            This is used to indicate that the associated work activity has been assigned and student's work product is not yet expected to have been submitted.
          type: string
          enum:
            - true
            - false
        incomplete:
          description: |
            This is used to indicate that the student's work product has been submitted but it is deemed incomplete by the teacher.
          type: string
          enum:
            - true
            - false
        late:
          description: |
            This is used to indicate that the student's work product is either past due or it has been submitted past the due date. The score on this result may be impacted as as result of this flag.
          type: string
          enum:
            - true
            - false
        missing:
          description: |
            This is used to indicate that the student's work product as not been submitted.
          type: string
          enum:
            - true
            - false
      additionalProperties: false
    AssessmentResultSetDType:
      description: |
        This is the container for a collection of assessment result instances for a message payload. This may be empty if no instances are found that sustain the applied query constraints. The order is not significant.
      type: object
      properties:
        assessmentResults:
          description: |
            The collection of assessment result instances. The order is not significant. The corresponding query constraints may result in no instances being returned.
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/AssessmentResultDType"
      additionalProperties: false
    CategoriesSetDType:
      description: |
        This is the container for a collection of category instances for a message payload. This may be empty if no instances are found that sustain the applied query constraints. The order is not significant.
      type: object
      properties:
        categories:
          description: |
            The collection of category instances. The order is not significant. The corresponding query constraints may result in no instances being returned.
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/CategoryDType"
      additionalProperties: false
    CategoryDType:
      description: |
        A Category is the name given to a grouping of line items (line items being equivalent to assignments which students will complete).
      type: object
      required:
        - sourcedId
        - status
        - dateLastModified
        - title
      properties:
        sourcedId:
          description: The sourcedId of the object. All objects MUST be identified by a Source Identifier. This is a GUID System ID for an object. This is the GUID that SYSTEMS will refer to when making API calls, or when needing to identify an object. It is RECOMMENDED that systems are able to map whichever local ids (e.g. database key fields) they use to SourcedId. The sourcedId of an object is considered an addressable property of an entity and as such will not be treated as Personally Identifiable Information (PII) by certified products. Therefore, as a part of certification, vendors will be required to declare that they will notify customers via documentation or other formal and documented agreement that sourcedIds should never contain PII in general, but particularly users. This means that if a customer includes a student name in an enrollment.sourcedId, it will not fall to any certified product to protect the enrollment.sourcedId as PII, or even the userSourcedId field in the enrollment record. Model Primitive Datatype = String.
          type: string
        status:
          description: |
            All objects MUST BE either 'active' or 'tobedeleted'. Something which is flagged 'tobedeleted' is to be considered safe to delete. Systems can delete records that are flagged as such if they wish, but they are not under any compulsion to do so. In v1.1 the enumeration value of 'inactive' was removed and so for backwards compatibility all such marked objects should be interpreted as 'tobedeleted'.
          type: string
          enum:
            - active
            - tobedeleted
        dateLastModified:
          description: All objects MUST be annotated with the dateTime upon which they were last modified. This enables requesters to query for just the latest objects. DateTimes MUST be expressed in W3C profile of [ISO 8601] and MUST contain the UTC timezone. Model Primitive Datatype = DateTime.
          type: string
          format: date-time
        metadata:
          $ref: "#/components/schemas/MetadataDType"
        title:
          description: The human readable title for the category. Model Primitive Datatype = NormalizedString.
          type: string
        weight:
          description: Total weight of this grading category in calculation of the course final score. Model Primitive Datatype = Float.
          type: number
          format: float
      additionalProperties: false
    CategoryGUIDRefDType:
      description: |
        This is the container for reference to a OneRoster 'Category' object that has an allocated sourcedId (GUID).
      type: object
      required:
        - href
        - sourcedId
        - type
      properties:
        href:
          description: The URI for the type of object being referenced. Model Primitive Datatype = AnyURI.
          type: string
          format: uri
        sourcedId:
          description: The globally unique identifier of the object being referenced. Model Primitive Datatype = String.
          type: string
        type:
          description: |
            The type of object being referenced i.e. a 'category'.
          type: string
          enum:
            - category
      additionalProperties: false
    ClassGUIDRefDType:
      description: |
        This is the container for reference to a OneRoster 'Class' object that has an allocated sourcedId (GUID).
      type: object
      required:
        - href
        - sourcedId
        - type
      properties:
        href:
          description: The URI for the type of object being referenced. Model Primitive Datatype = AnyURI.
          type: string
          format: uri
        sourcedId:
          description: The globally unique identifier of the object being referenced. Model Primitive Datatype = String.
          type: string
        type:
          description: |
            The type of object being referenced i.e. a 'class'.
          type: string
          enum:
            - class
      additionalProperties: false
    CourseGUIDRefDType:
      description: |
        This is the container for reference to a OneRoster 'Course' object that has an allocated sourcedId (GUID).
      type: object
      required:
        - href
        - sourcedId
        - type
      properties:
        href:
          description: The URI for the type of object being referenced. Model Primitive Datatype = AnyURI.
          type: string
          format: uri
        sourcedId:
          description: The globally unique identifier of the object being referenced. Model Primitive Datatype = String.
          type: string
        type:
          description: |
            The type of object being referenced i.e. a 'course'.
          type: string
          enum:
            - course
      additionalProperties: false
    GUIDPairDType:
      description: |
        The container for the mapping between the supplied (assigned by the requesting system) and allocated (assigned by the responding system) sourcedIds i.e. GUIDs.
      type: object
      required:
        - suppliedSourcedId
        - allocatedSourcedId
      properties:
        suppliedSourcedId:
          description: The temporary sourcedId that has been allocated by the requesting system. This sourcedId is used to enable identification of the original record for which the new sourcedId has been allocated at the service provider. Model Primitive Datatype = String.
          type: string
        allocatedSourcedId:
          description: The sourcedId that has been allocated by the system on which the new record has been created. Model Primitive Datatype = String.
          type: string
      additionalProperties: false
    GUIDPairSetDType:
      description: |
        The container for the set of sourcedId pairs. This is used to provide the mapping between a set of original/new values allocated to a set of sourcedIds.
      type: object
      properties:
        sourcedIdPairs:
          description: |
            The set of sourcedId pairs. The order is not significant as each pair contains the information between the original/new values.
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/GUIDPairDType"
      additionalProperties: false
    LearningObjectiveResultsDType:
      description: |
        This is the container for a learning objective identifier. This also allows a mastery score to be aligned with the learning objective.
      type: object
      required:
        - learningObjectiveId
      properties:
        learningObjectiveId:
          description: The unique identifier for the associated learning objective. If this is a CASE identifier it MUST be a valid UUID. Model Primitive Datatype = NormalizedString.
          type: string
        score:
          description: The optional mastery score supplied as a numeric value.  Model Primitive Datatype = Float.
          type: number
          format: float
        textScore:
          description: The optional mastery score supplied in a non-numeric form.  Model Primitive Datatype = NormalizedString.
          type: string
      additionalProperties: false
    LearningObjectiveScoreSetDType:
      description: |
        This is the container for the set of learning objective identifiers that are from a single source responsible for creating those identifiers. This also allows a mastery score to be aligned with a learning objective.
      type: object
      required:
        - source
        - learningObjectiveResults
      properties:
        source:
          description: |
            The source responsible for creating the learning objective identifiers. The permitted values are from an extensible vocabulary.
          anyOf:
            - description: This data-type ensures that the free-form entry does NOT have the value 'case' or 'unknown'. Model Primitive Datatype = NormalizedString.
              type: string
              pattern: "^/(?!case$)(?!unknown$)[a-z0-9]+$"
            - enum:
                - case
                - unknown
              type: string
        learningObjectiveResults:
          description: |
            The set of unique identifiers for the associated learning objectives (these may have alignment with a mastery score). If these are CASE identifiers they MUST be valid UUIDs.
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/LearningObjectiveResultsDType"
      additionalProperties: false
    LearningObjectiveSetDType:
      description: |
        This is the container for the set of learning objective identifiers that are from a single source responsible for creating those identifiers.
      type: object
      required:
        - source
        - learningObjectiveIds
      properties:
        source:
          description: |
            The source responsible for creating the learning objective identifiers. The permitted values are from an extensible vocabulary.
          anyOf:
            - description: This data-type ensures that the free-form entry does NOT have the value 'case' or 'unknown'. Model Primitive Datatype = NormalizedString.
              type: string
              pattern: "^/(?!case$)(?!unknown$)[a-z0-9]+$"
            - enum:
                - case
                - unknown
              type: string
        learningObjectiveIds:
          description: The set of unique identifiers for the associated learning objectives. If these are CASE identifiers they MUST be valid UUIDs. Model Primitive Datatype = NormalizedString.
          type: array
          minItems: 1
          items:
            type: string
      additionalProperties: false
    LineItemDType:
      description: |
        This is the container for the definition of a lineItem. A lineItem is a collection of results for a set of students who are completing an assignment as part of a class at a school.
      type: object
      required:
        - sourcedId
        - status
        - dateLastModified
        - title
        - assignDate
        - dueDate
        - class
        - school
        - category
      properties:
        sourcedId:
          description: The sourcedId of the object. All objects MUST be identified by a Source Identifier. This is a GUID System ID for an object. This is the GUID that SYSTEMS will refer to when making API calls, or when needing to identify an object. It is RECOMMENDED that systems are able to map whichever local ids (e.g. database key fields) they use to SourcedId. The sourcedId of an object is considered an addressable property of an entity and as such will not be treated as Personally Identifiable Information (PII) by certified products. Therefore, as a part of certification, vendors will be required to declare that they will notify customers via documentation or other formal and documented agreement that sourcedIds should never contain PII in general, but particularly users. This means that if a customer includes a student name in an enrollment.sourcedId, it will not fall to any certified product to protect the enrollment.sourcedId as PII, or even the userSourcedId field in the enrollment record. Model Primitive Datatype = String.
          type: string
        status:
          description: |
            All objects MUST BE either 'active' or 'tobedeleted'. Something which is flagged 'tobedeleted' is to be considered safe to delete. Systems can delete records that are flagged as such if they wish, but they are not under any compulsion to do so. In v1.1 the enumeration value of 'inactive' was removed and so for backwards compatibility all such marked objects should be interpreted as 'tobedeleted'.
          type: string
          enum:
            - active
            - tobedeleted
        dateLastModified:
          description: All objects MUST be annotated with the dateTime upon which they were last modified. This enables requesters to query for just the latest objects. DateTimes MUST be expressed in W3C profile of [ISO 8601] and MUST contain the UTC timezone. Model Primitive Datatype = DateTime.
          type: string
          format: date-time
        metadata:
          $ref: "#/components/schemas/MetadataDType"
        title:
          description: The title, human readable, for the lineItem.  This should allow the lineItem to be distinguished from its peer lineItems. Model Primitive Datatype = NormalizedString.
          type: string
        description:
          description: A human readable description of the usage of the lineItem. Model Primitive Datatype = String.
          type: string
        assignDate:
          description: The date/time the activity being addressed by the lineItem was assigned to the student. This has a format as defined in [ISO 8601]. Model Primitive Datatype = DateTime.
          type: string
          format: date-time
        dueDate:
          description: The date/time by which the assignment must be completed and submitted. This has the dateTime format as defined in [ISO 8601]. Model Primitive Datatype = DateTime.
          type: string
          format: date-time
        class:
          $ref: "#/components/schemas/ClassGUIDRefDType"
        school:
          $ref: "#/components/schemas/OrgGUIDRefDType"
        category:
          $ref: "#/components/schemas/CategoryGUIDRefDType"
        gradingPeriod:
          $ref: "#/components/schemas/AcadSessionGUIDRefDType"
        academicSession:
          $ref: "#/components/schemas/AcadSessionGUIDRefDType"
        scoreScale:
          $ref: "#/components/schemas/ScoreScaleGUIDRefDType"
        resultValueMin:
          description: The minimum value (numeric) that can be assigned to the score attribute in a result. The score scale mapping should be used to map to other scores. Model Primitive Datatype = Float.
          type: number
          format: float
        resultValueMax:
          description: The maximum value (numeric) that can be assigned to the score attribute in a result. The score scale mapping should be used to map to other scores. Model Primitive Datatype = Float.
          type: number
          format: float
        learningObjectiveSet:
          description: |
            The set of identifiers for the learning objectives to which this assessment is aligned. Any number groups of learning objectives can be assigned.
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/LearningObjectiveSetDType"
      additionalProperties: false
    LineItemGUIDRefDType:
      description: |
        This is the container for reference to a OneRoster 'LineItem' object that has an allocated sourcedId (GUID).
      type: object
      required:
        - href
        - sourcedId
        - type
      properties:
        href:
          description: The URI for the type of object being referenced. Model Primitive Datatype = AnyURI.
          type: string
          format: uri
        sourcedId:
          description: The globally unique identifier of the object being referenced. Model Primitive Datatype = String.
          type: string
        type:
          description: |
            The type of object being referenced i.e. a 'lineItem'.
          type: string
          enum:
            - lineItem
      additionalProperties: false
    LineItemSetDType:
      description: |
        This is the container for a collection of lineItem instances for a message payload. This may be empty if no instances are found that sustain the applied query constraints. The order is not significant.
      type: object
      properties:
        lineItems:
          description: |
            The collection of lineItem instances. The order is not significant. The corresponding query constraints may result in no instances being returned.
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/LineItemDType"
      additionalProperties: false
    MetadataDType:
      description: |
        The container for the proprietary extensions.
      type: object
      properties: {}
      additionalProperties: true
    OrgGUIDRefDType:
      description: |
        This is the container for reference to a OneRoster 'Org' object that has an allocated sourcedId (GUID).
      type: object
      required:
        - href
        - sourcedId
        - type
      properties:
        href:
          description: The URI for the type of object being referenced. Model Primitive Datatype = AnyURI.
          type: string
          format: uri
        sourcedId:
          description: The globally unique identifier of the object being referenced. Model Primitive Datatype = String.
          type: string
        type:
          description: |
            The type of object being referenced i.e. an 'org'.
          type: string
          enum:
            - org
      additionalProperties: false
    ResultDType:
      description: |
        This is the container for the Result record.  A result consists of the assigned score plus the context for that score.
      type: object
      required:
        - sourcedId
        - status
        - dateLastModified
        - lineItem
        - student
        - scoreStatus
        - scoreDate
      properties:
        sourcedId:
          description: The sourcedId of the object. All objects MUST be identified by a Source Identifier. This is a GUID System ID for an object. This is the GUID that SYSTEMS will refer to when making API calls, or when needing to identify an object. It is RECOMMENDED that systems are able to map whichever local ids (e.g. database key fields) they use to SourcedId. The sourcedId of an object is considered an addressable property of an entity and as such will not be treated as Personally Identifiable Information (PII) by certified products. Therefore, as a part of certification, vendors will be required to declare that they will notify customers via documentation or other formal and documented agreement that sourcedIds should never contain PII in general, but particularly users. This means that if a customer includes a student name in an enrollment.sourcedId, it will not fall to any certified product to protect the enrollment.sourcedId as PII, or even the userSourcedId field in the enrollment record. Model Primitive Datatype = String.
          type: string
        status:
          description: |
            All objects MUST BE either 'active' or 'tobedeleted'. Something which is flagged 'tobedeleted' is to be considered safe to delete. Systems can delete records that are flagged as such if they wish, but they are not under any compulsion to do so. In v1.1 the enumeration value of 'inactive' was removed and so for backwards compatibility all such marked objects should be interpreted as 'tobedeleted'.
          type: string
          enum:
            - active
            - tobedeleted
        dateLastModified:
          description: All objects MUST be annotated with the dateTime upon which they were last modified. This enables requesters to query for just the latest objects. DateTimes MUST be expressed in W3C profile of [ISO 8601] and MUST contain the UTC timezone. Model Primitive Datatype = DateTime.
          type: string
          format: date-time
        metadata:
          $ref: "#/components/schemas/MetadataDType"
        lineItem:
          $ref: "#/components/schemas/LineItemGUIDRefDType"
        student:
          $ref: "#/components/schemas/UserGUIDRefDType"
        class:
          $ref: "#/components/schemas/ClassGUIDRefDType"
        scoreScale:
          $ref: "#/components/schemas/ScoreScaleGUIDRefDType"
        scoreStatus:
          description: |
            The status of the score. The value is from an extensible enumerated vocabulary.
          anyOf:
            - description: The data-type that enables the score status enumerated vocabulary to be extended. Model Primitive Datatype = NormalizedString.
              type: string
              pattern: "(ext:)[a-zA-Z0-9\\.\\-_]+"
            - enum:
                - exempt
                - fully graded
                - not submitted
                - partially graded
                - submitted
              type: string
        score:
          description: The score for the result. If a scoreScale is assigned then the value must align with the scale. Model Primitive Datatype = Float.
          type: number
          format: float
        textScore:
          description: An optional non-numeric score value. If a scoreScale is assigned then the value must align with the scale. This attribute was added in OR 1.2. Model Primitive Datatype = NormalizedString.
          type: string
        scoreDate:
          description: The date at which the score is assigned or there is an update to the result e.g. change in the 'scoreStatus'. The format is YYYY-MM-DD as defined in [ISO 8601]. Model Primitive Datatype = Date.
          type: string
          format: date
        comment:
          description: A human readable comment about the score. Model Primitive Datatype = String.
          type: string
        learningObjectiveSet:
          description: |
            The set of identifiers for the learning objectives to which this result is aligned. Any number groups of learning objectives can be assigned.
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/LearningObjectiveScoreSetDType"
        inProgress:
          description: |
            This is used to indicate that the associated work activity has been assigned and student's work product is not yet expected to have been submitted.
          type: string
          enum:
            - true
            - false
        incomplete:
          description: |
            This is used to indicate that the student's work product has been submitted but it is deemed incomplete by the teacher.
          type: string
          enum:
            - true
            - false
        late:
          description: |
            This is used to indicate that the student's work product is either past due or it has been submitted past the due date. The score on this result may be impacted as as result of this flag.
          type: string
          enum:
            - true
            - false
        missing:
          description: |
            This is used to indicate that the student's work product as not been submitted.
          type: string
          enum:
            - true
            - false
      additionalProperties: false
    ResultSetDType:
      description: |
        This is the container for a collection of result instances for a message payload. This may be empty if no instances are found that sustain the applied query constraints. The order is not significant.
      type: object
      properties:
        results:
          description: |
            The collection of result instances. The order is not significant. The corresponding query constraints may result in no instances being returned.
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/ResultDType"
      additionalProperties: false
    ScoreScaleDType:
      description: |
        The container for the definition Score Scale mapping i.e. the relationship between two score scales.
      type: object
      required:
        - sourcedId
        - status
        - dateLastModified
        - title
        - type
        - class
        - scoreScaleValue
      properties:
        sourcedId:
          description: The sourcedId of the object. All objects MUST be identified by a Source Identifier. This is a GUID System ID for an object. This is the GUID that SYSTEMS will refer to when making API calls, or when needing to identify an object. It is RECOMMENDED that systems are able to map whichever local ids (e.g. database key fields) they use to SourcedId. The sourcedId of an object is considered an addressable property of an entity and as such will not be treated as Personally Identifiable Information (PII) by certified products. Therefore, as a part of certification, vendors will be required to declare that they will notify customers via documentation or other formal and documented agreement that sourcedIds should never contain PII in general, but particularly users. This means that if a customer includes a student name in an enrollment.sourcedId, it will not fall to any certified product to protect the enrollment.sourcedId as PII, or even the userSourcedId field in the enrollment record. Model Primitive Datatype = String.
          type: string
        status:
          description: |
            All objects MUST BE either 'active' or 'tobedeleted'. Something which is flagged 'tobedeleted' is to be considered safe to delete. Systems can delete records that are flagged as such if they wish, but they are not under any compulsion to do so. In v1.1 the enumeration value of 'inactive' was removed and so for backwards compatibility all such marked objects should be interpreted as 'tobedeleted'.
          type: string
          enum:
            - active
            - tobedeleted
        dateLastModified:
          description: All objects MUST be annotated with the dateTime upon which they were last modified. This enables requesters to query for just the latest objects. DateTimes MUST be expressed in W3C profile of [ISO 8601] and MUST contain the UTC timezone. Model Primitive Datatype = DateTime.
          type: string
          format: date-time
        metadata:
          $ref: "#/components/schemas/MetadataDType"
        title:
          description: The human readable title for the score scale mapping. Model Primitive Datatype = NormalizedString.
          type: string
        type:
          description: The type of score scale mapping. At present there is no predefined vocabulary. This should be used by an organization to differentiate between the score scales that it produces. Model Primitive Datatype = NormalizedString.
          type: string
        course:
          $ref: "#/components/schemas/CourseGUIDRefDType"
        class:
          $ref: "#/components/schemas/ClassGUIDRefDType"
        scoreScaleValue:
          description: |
            The set of mappings for this score scale.
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/ScoreScaleValueDType"
      additionalProperties: false
    ScoreScaleGUIDRefDType:
      description: |
        This is the container for reference to a OneRoster 'ScoreScale' object that has an allocated sourcedId (GUID).
      type: object
      required:
        - href
        - sourcedId
        - type
      properties:
        href:
          description: The URI for the type of object being referenced. Model Primitive Datatype = AnyURI.
          type: string
          format: uri
        sourcedId:
          description: The globally unique identifier of the object being referenced. Model Primitive Datatype = String.
          type: string
        type:
          description: |
            The type of object being referenced i.e. a 'scoreScale'.
          type: string
          enum:
            - scoreScale
      additionalProperties: false
    ScoreScaleSetDType:
      description: |
        This is the container for a collection of scoreScale instances for a message payload. This may be empty if no instances are found that sustain the applied query constraints. The order is not significant.
      type: object
      properties:
        scoreScales:
          description: |
            The collection of scoreScale instances. The order is not significant. The corresponding query constraints may result in no instances being returned.
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/ScoreScaleDType"
      additionalProperties: false
    ScoreScaleValueDType:
      description: |
        A specific mapping of values between two score scales. The left hand side (LHS) value is the reference point. Examples of this mapping are: '7' maps to 'A', '7'-'10' maps to 'A', etc.
      type: object
      required:
        - itemValueLHS
        - itemValueRHS
      properties:
        itemValueLHS:
          description: The left hand side value of the mapping relationship. The format is either a single value ('x') or a range ('x' - 'y'). In the case of a single value this is considered to be the inclusive lower value for the implied range. When a range is specified (lower-to-upper) the values are inclusive. Model Primitive Datatype = NormalizedString.
          type: string
        itemValueRHS:
          description: The right hand side value of the mapping relationship  i.e. the equivalent value to the reference point defined in the LHS. Model Primitive Datatype = NormalizedString.
          type: string
      additionalProperties: false
    SingleAssessmentLineItemDType:
      description: |
        This is the container for a single assessment lineItem instance for a message payload.
      type: object
      required:
        - assessmentLineItem
      properties:
        assessmentLineItem:
          $ref: "#/components/schemas/AssessmentLineItemDType"
      additionalProperties: false
    SingleAssessmentResultDType:
      description: |
        This is the container for a single assessment result instance for a message payload.
      type: object
      required:
        - assessmentResult
      properties:
        assessmentResult:
          $ref: "#/components/schemas/AssessmentResultDType"
      additionalProperties: false
    SingleCategoryDType:
      description: |
        This is the container for a single category instance for a message payload.
      type: object
      required:
        - category
      properties:
        category:
          $ref: "#/components/schemas/CategoryDType"
      additionalProperties: false
    SingleLineItemDType:
      description: |
        This is the container for a single lineItem instance for a message payload.
      type: object
      required:
        - lineItem
      properties:
        lineItem:
          $ref: "#/components/schemas/LineItemDType"
      additionalProperties: false
    SingleResultDType:
      description: |
        This is the container for a single result instance for a message payload.
      type: object
      required:
        - result
      properties:
        result:
          $ref: "#/components/schemas/ResultDType"
      additionalProperties: false
    SingleScoreScaleDType:
      description: |
        This is the container for a single scoreScale instance for a message payload.
      type: object
      required:
        - scoreScale
      properties:
        scoreScale:
          $ref: "#/components/schemas/ScoreScaleDType"
      additionalProperties: false
    UserGUIDRefDType:
      description: |
        This is the container for reference to a OneRoster 'User' object that has an allocated sourcedId (GUID).
      type: object
      required:
        - href
        - sourcedId
        - type
      properties:
        href:
          description: The URI for the type of object being referenced. Model Primitive Datatype = AnyURI.
          type: string
          format: uri
        sourcedId:
          description: The globally unique identifier of the object being referenced. Model Primitive Datatype = String.
          type: string
        type:
          description: |
            The type of object being referenced i.e. a 'user'.
          type: string
          enum:
            - user
      additionalProperties: false
    imsx_CodeMinorDType:
      description: |
        This is the container for the set of code minor status codes reported in the responses from the Service Provider.
      type: object
      required:
        - imsx_codeMinorField
      properties:
        imsx_codeMinorField:
          description: |
            Each reported code minor status code.
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/imsx_CodeMinorFieldDType"
      additionalProperties: false
    imsx_CodeMinorFieldDType:
      description: |
        This is the container for a single code minor status code.
      type: object
      required:
        - imsx_codeMinorFieldName
        - imsx_codeMinorFieldValue
      properties:
        imsx_codeMinorFieldName:
          description: This should contain the identity of the system that has produced the code minor status code report. In most cases this will be the target service provider denoted as 'TargetEndSystem'. Model Primitive Datatype = NormalizedString.
          type: string
          default: TargetEndSystem
        imsx_codeMinorFieldValue:
          description: |
            The code minor status code (this is a value from the corresponding enumerated vocabulary).
          type: string
          enum:
            - fullsuccess
            - invalid_filter_field
            - invalid_selection_field
            - invaliddata
            - unauthorisedrequest
            - internal_server_error
            - server_busy
            - deletefailure
            - unknownobject
            - forbidden
      additionalProperties: false
    imsx_StatusInfoDType:
      description: |
        This is the container for the status code and associated information returned within the HTTP messages received from the Service Provider. For the OneRoster Rostering service this object will only be returned to provide information about a failed request i.e. it will NOT be in the payload for a successful request. See Appendix B for further information on the interpretation of the information contained within this class.
      type: object
      required:
        - imsx_codeMajor
        - imsx_severity
      properties:
        imsx_codeMajor:
          description: |
            The code major value (from the corresponding enumerated vocabulary). See Appendix B for further information on the interpretation of this set of codes. The permitted vocabulary for the values for the CodeMajor field.
          type: string
          enum:
            - success
            - processing
            - failure
            - unsupported
        imsx_severity:
          description: |
            The severity value (from the corresponding enumerated vocabulary). See Appendix B for further information on the interpretation of this set of codes.
          type: string
          enum:
            - status
            - warning
            - error
        imsx_description:
          description: A human readable description supplied by the entity creating the status code information. Model Primitive Datatype = String.
          type: string
        imsx_CodeMinor:
          $ref: "#/components/schemas/imsx_CodeMinorDType"
      additionalProperties: false
    ResourceDType:
      description: |
        A resource is a description of learning content that is related to a course and/or a class and/or a user. This identifies a resource that is used by a teacher, learner, etc. as part of the learning experience.  A resource MUST be associated to a course and/or a class.
      type: object
      required:
        - sourcedId
        - status
        - dateLastModified
        - vendorResourceId
      properties:
        sourcedId:
          description: All Objects MUST be identified by a Source Identifier. This is a GUID i.e. a unique system interoperability  identifier for an object. This is the GUID that SYSTEMS will refer to when making API calls, or when needing to identify an object. It is RECOMMENDED that systems are able to map whichever local identifiers (e.g. database key fields) they use to the corresponding SourcedId. The sourcedId of an object is considered an addressable property of an entity and as such will not be treated as Personally Identifiable Information (PII) by certified products. Therefore, as a part of certification, vendors will be required to declare that they will notify customers via documentation or other formal and documented agreement that sourcedIds should never contain PII in general, but particularly users. This means that if a customer includes a student name in an enrollment.sourcedId, it will not fall to any certified product to protect the enrollment.sourcedId as PII, or even the userSourcedId field in the enrollment record. Model Primitive Datatype = String.
          type: string
        status:
          description: |
            All objects MUST BE either 'active' or 'tobedeleted'.  Something which is flagged 'tobedeleted' is to be considered safe to delete. Systems can delete records that are flagged as such if they wish, but they are not under any compulsion to do so. NOTE: In v1.1 the enumeration value of 'inactive' was removed and so for backwards compatibility all such marked objects should be interpreted as 'tobedeleted'.
          type: string
          enum:
            - active
            - tobedeleted
        dateLastModified:
          description: All objects MUST be annotated with the dateTime upon which they were last modified. This enables requesters to query for just the latest objects. DateTimes MUST be expressed in W3C profile of [ISO 8601] and MUST contain the UTC timezone. Model Primitive Datatype = DateTime.
          type: string
          format: date-time
        metadata:
          $ref: "#/components/schemas/MetadataDType"
        title:
          description: A human readable title/label for the resource. Model Primitive Datatype = NormalizedString.
          type: string
        roles:
          description: |
            The set of roles, types of users, who are expected to make use of the resource.
          type: array
          minItems: 0
          items:
            anyOf:
              - enum:
                  - administrator
                  - aide
                  - guardian
                  - parent
                  - proctor
                  - relative
                  - student
                  - teacher
                type: string
              - description: The data-type that enables the 'RoleEnum' vocabulary to be extended. Model Primitive Datatype = NormalizedString.
                type: string
                pattern: "(ext:)[a-zA-Z0-9\\.\\-_]+"
        importance:
          description: |
            This is an indicator of the significance of the resource i.e. primary or secondary.
          type: string
          enum:
            - primary
            - secondary
        vendorResourceId:
          description: This is a unique identifier for the resource allocated by the vendor. Model Primitive Datatype = String.
          type: string
        vendorId:
          description: Identifier for the vendor who created the resource. This will be assigned by 1EdTech as part of Conformance Certification. Model Primitive Datatype = String.
          type: string
        applicationId:
          description: Identifier for the application associated with the resource. The nature, and how this identifier is assigned is not defined by this specification. Model Primitive Datatype = String.
          type: string
      additionalProperties: false
    ResourceSetDType:
      description: |
        The container for a collection of resource records. The order is not significant. This may be empty. The service provider may not have any resources or cannot identfiy any resources that fit the specified filter constraints.
      type: object
      properties:
        resources:
          description: |
            The set of contained resource identfiers.
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/ResourceDType"
      additionalProperties: false
    SingleResourceDType:
      description: |
        The container for a single resource. This may be empty i.e. the resource has no properties that obey any of the specified selection criteria.
      type: object
      required:
        - resource
      properties:
        resource:
          $ref: "#/components/schemas/ResourceDType"
      additionalProperties: false
    AcademicSessionDType:
      description: |
        The container for an academicSession. An academicSession represents a duration of time. Typically they are used to describe terms, grading periods, and other durations e.g. school years. Term is used to describe a period of time during which learning will take place. Other words for term could be in common use around the world e.g. Semester. The important thing is that Term is a unit of time, often many weeks long, into which classes are scheduled. Grading Period is used to represent another unit of time, that within which line items are assessed. A term may have many grading periods, a grading period belongs to a single term. A class may be assessed over several grade periods (represented by a line item being connected to a grading period). The parent / child attributes of academic sessions allow terms to be connected to their grading periods and vice-versa.
      type: object
      required:
        - sourcedId
        - status
        - dateLastModified
        - title
        - startDate
        - endDate
        - type
        - schoolYear
      properties:
        sourcedId:
          description: The sourcedId of the object. All objects MUST be identified by a Source Identifier. This is a GUID  System ID for an object. This is the GUID that SYSTEMS will refer to when making API calls, or when needing to identify an object. It is RECOMMENDED that systems are able to map whichever local ids (e.g. database key fields) they use to SourcedId.  The sourcedId of an object is considered an addressable property of an entity and as such will not be treated as Personally Identifiable Information (PII) by certified products.  Therefore, as a part of certification, vendors will be required to declare that they will notify customers via documentation or other formal and documented agreement that sourcedIds should never contain PII in general, but particularly users. This means that if a customer includes a student name in an enrollment.sourcedId, it will not fall to any certified product to protect the enrollment.sourcedId as PII, or even the userSourcedId field in the enrollment record. Model Primitive Datatype = String.
          type: string
        status:
          description: |
            All objects MUST BE either 'active' or 'tobedeleted'.  Something which is flagged 'tobedeleted' is to be considered safe to delete. Systems can delete records that are flagged as such if they wish, but they are not under any compulsion to do so. In v1.1 the enumeration value of 'inactive' was removed and so for backwards compatibility all such marked objects should be interpreted as 'tobedeleted'.
          type: string
          enum:
            - active
            - tobedeleted
        dateLastModified:
          description: All objects MUST be annotated with the dateTime upon which they were last modified. This enables requesters to query for just the latest objects. DateTimes MUST be expressed in W3C profile of [ISO 8601] and MUST contain the UTC timezone. Model Primitive Datatype = DateTime.
          type: string
          format: date-time
        metadata:
          $ref: "#/components/schemas/MetadataDType"
        title:
          description: The title/label for the academic session. Model Primitive Datatype = NormalizedString.
          type: string
        startDate:
          description: The start date for the academic session. The start date is included in the academic session. This is in [ISO 8601] format of 'YYYY-MM-DD'. Model Primitive Datatype = Date.
          type: string
          format: date
        endDate:
          description: The end date for the academic session. The end date is excluded from the academic session. This is in [ISO 8601] format of 'YYYY-MM-DD'. Model Primitive Datatype = Date.
          type: string
          format: date
        type:
          description: |
            The type of academic session. This is based upon an enumerated vocabulary.
          anyOf:
            - enum:
                - gradingPeriod
                - semester
                - schoolYear
                - term
              type: string
            - description: The data-type that enables an enumerated vocabulary to be extended. Model Primitive Datatype = NormalizedString.
              type: string
              pattern: "(ext:)[a-zA-Z0-9\\.\\-_]+"
        parent:
          $ref: "#/components/schemas/AcadSessionGUIDRefDType"
        children:
          description: |
            The set of links to the child AcademicSessions i.e. a set of AcademicSession 'sourcedIds'.
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/AcadSessionGUIDRefDType"
        schoolYear:
          description: The school year for the academic session.  This year should include the school year end e.g. 2014. This is in the [ISO 8601] format of 'YYYY'. Model Primitive Datatype = NormalizedString.
          type: string
      additionalProperties: false
    AcademicSessionSetDType:
      description: |
        This is the container for a collection of academicSessions instances for a message payload. This may be empty if no instances are found that sustain the applied query constraints. The order is not significant.
      type: object
      properties:
        academicSessions:
          description: |
            The collection of academicSession instances. The order is not significant. The corresponding query constraints may result in no instances being returned.
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/AcademicSessionDType"
      additionalProperties: false
    ClassDType:
      description: |
        A class is an instance of a course, onto which students and teachers are enrolled. A class is typically held within a term.
      type: object
      required:
        - sourcedId
        - status
        - dateLastModified
        - title
        - course
        - school
        - terms
      properties:
        sourcedId:
          description: The sourcedId of the object. All objects MUST be identified by a Source Identifier. This is a GUID  System ID for an object. This is the GUID that SYSTEMS will refer to when making API calls, or when needing to identify an object. It is RECOMMENDED that systems are able to map whichever local ids (e.g. database key fields) they use to SourcedId.  The sourcedId of an object is considered an addressable property of an entity and as such will not be treated as Personally Identifiable Information (PII) by certified products.  Therefore, as a part of certification, vendors will be required to declare that they will notify customers via documentation or other formal and documented agreement that sourcedIds should never contain PII in general, but particularly users. This means that if a customer includes a student name in an enrollment.sourcedId, it will not fall to any certified product to protect the enrollment.sourcedId as PII, or even the userSourcedId field in the enrollment record. Model Primitive Datatype = String.
          type: string
        status:
          description: |
            All objects MUST BE either 'active' or 'tobedeleted'.  Something which is flagged 'tobedeleted' is to be considered safe to delete. Systems can delete records that are flagged as such if they wish, but they are not under any compulsion to do so. In v1.1 the enumeration value of 'inactive' was removed and so for backwards compatibility all such marked objects should be interpreted as 'tobedeleted'.
          type: string
          enum:
            - active
            - tobedeleted
        dateLastModified:
          description: All objects MUST be annotated with the dateTime upon which they were last modified. This enables requesters to query for just the latest objects. DateTimes MUST be expressed in W3C profile of [ISO 8601] and MUST contain the UTC timezone. Model Primitive Datatype = DateTime.
          type: string
          format: date-time
        metadata:
          $ref: "#/components/schemas/MetadataDType"
        title:
          description: The tile/label for the class. Model Primitive Datatype = NormalizedString.
          type: string
        classCode:
          description: The class code. Model Primitive Datatype = NormalizedString.
          type: string
        classType:
          description: |
            The type of class. This is based upon an enumerated vocabulary.
          anyOf:
            - enum:
                - homeroom
                - scheduled
              type: string
            - description: The data-type that enables an enumerated vocabulary to be extended. Model Primitive Datatype = NormalizedString.
              type: string
              pattern: "(ext:)[a-zA-Z0-9\\.\\-_]+"
        location:
          description: The location for the class e.g. 'Room 19'. Model Primitive Datatype = NormalizedString.
          type: string
        grades:
          description: The grade(s) who attend the class. The permitted vocabulary should be defined as part of the adoption and deployment process. See the Implementation Guide [OR-IMPL-12] for more details on how to define/use such a vocabulary. Model Primitive Datatype = NormalizedString.
          type: array
          minItems: 0
          items:
            type: string
        subjects:
          description: The set of subjects addressed by this class e.g. 'chemistry'. Model Primitive Datatype = NormalizedString.
          type: array
          minItems: 0
          items:
            type: string
        course:
          $ref: "#/components/schemas/CourseGUIDRefDType"
        school:
          $ref: "#/components/schemas/OrgGUIDRefDType"
        terms:
          description: |
            The links to the set of terms or semesters (academicSession) i.e. the set of 'sourcedIds' for the terms within the associated school year.
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/AcadSessionGUIDRefDType"
        subjectCodes:
          description: This is a machine readable set of codes and the number should match the associated 'subjects' attribute. The vocabulary for this characteristic should be defined as part of the local addition of this specification (see the Implementation Guide [OR-IMPL-12] for more details). Model Primitive Datatype = NormalizedString.
          type: array
          minItems: 0
          items:
            type: string
        periods:
          description: The time slots in the day that the class will be given. Examples are 1 or a list of 1, 3, 5, etc. Model Primitive Datatype = NormalizedString.
          type: array
          minItems: 0
          items:
            type: string
        resources:
          description: |
            The links to the set of associated resources i.e. the Resource 'sourcedIds'.
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/ResourceGUIDRefDType"
      additionalProperties: false
    ClassSetDType:
      description: |
        This is the container for a collection of classes instances for a message payload. This may be empty if no instances are found that sustain the applied query constraints. The order is not significant.
      type: object
      properties:
        classes:
          description: |
            The collection of class instances. The order is not significant. The corresponding query constraints may result in no instances being returned.
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/ClassDType"
      additionalProperties: false
    CourseDType:
      description: |
        The information about a course. A Course is a course of study that, typically, has a shared curriculum although it may be taught to different students by different teachers. It is likely that several classes of a single course may be taught in a term. For example, a school runs Grade 9 English in the spring term. There are four classes, each with a different 30 students, taught by 4 different teachers. However the curriculum for each of those four classes is the same i.e. the course curriculum.
      type: object
      required:
        - sourcedId
        - status
        - dateLastModified
        - title
        - courseCode
      properties:
        sourcedId:
          description: The sourcedId of the object. All objects MUST be identified by a Source Identifier. This is a GUID  System ID for an object. This is the GUID that SYSTEMS will refer to when making API calls, or when needing to identify an object. It is RECOMMENDED that systems are able to map whichever local ids (e.g. database key fields) they use to SourcedId.  The sourcedId of an object is considered an addressable property of an entity and as such will not be treated as Personally Identifiable Information (PII) by certified products.  Therefore, as a part of certification, vendors will be required to declare that they will notify customers via documentation or other formal and documented agreement that sourcedIds should never contain PII in general, but particularly users. This means that if a customer includes a student name in an enrollment.sourcedId, it will not fall to any certified product to protect the enrollment.sourcedId as PII, or even the userSourcedId field in the enrollment record. Model Primitive Datatype = String.
          type: string
        status:
          description: |
            All objects MUST BE either 'active' or 'tobedeleted'.  Something which is flagged 'tobedeleted' is to be considered safe to delete. Systems can delete records that are flagged as such if they wish, but they are not under any compulsion to do so. In v1.1 the enumeration value of 'inactive' was removed and so for backwards compatibility all such marked objects should be interpreted as 'tobedeleted'.
          type: string
          enum:
            - active
            - tobedeleted
        dateLastModified:
          description: All objects MUST be annotated with the dateTime upon which they were last modified. This enables requesters to query for just the latest objects. DateTimes MUST be expressed in W3C profile of [ISO 8601] and MUST contain the UTC timezone. Model Primitive Datatype = DateTime.
          type: string
          format: date-time
        metadata:
          $ref: "#/components/schemas/MetadataDType"
        title:
          description: The title of the course. Model Primitive Datatype = NormalizedString.
          type: string
        schoolYear:
          $ref: "#/components/schemas/AcadSessionGUIDRefDType"
        courseCode:
          description: The assigned course code. Model Primitive Datatype = NormalizedString.
          type: string
        grades:
          description: Grade(s) for which the class is attended. The permitted vocabulary should be defined as part of the adoption and deployment process. See the Implementation Guide [OR-IMPL-12] for more details on how to define/use such a vocabulary. Model Primitive Datatype = NormalizedString.
          type: array
          minItems: 0
          items:
            type: string
        subjects:
          description: The set of subjects addresse by this course. This is a set of human readable strings.   Model Primitive Datatype = NormalizedString.
          type: array
          minItems: 0
          items:
            type: string
        org:
          $ref: "#/components/schemas/OrgGUIDRefDType"
        subjectCodes:
          description: This is a machine readable set of codes and the number should match the associated 'subjects' attribute. The vocabulary for this characteristic should be defined as part of the local addition of this specification (see the Implementation Guide [OR-IMPL-12] for more details). Model Primitive Datatype = NormalizedString.
          type: array
          minItems: 0
          items:
            type: string
        resources:
          description: |
            The links to the associated resources if applicable i.e. the resource 'sourcedIds'.
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/ResourceGUIDRefDType"
      additionalProperties: false
    CourseSetDType:
      description: |
        This is the container for a collection of courses instances for a message payload. This may be empty if no instances are found that sustain the applied query constraints. The order is not significant.
      type: object
      properties:
        courses:
          description: |
            The collection of course instances. The order is not significant. The corresponding query constraints may result in no instances being returned.
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/CourseDType"
      additionalProperties: false
    CredentialDType:
      description: |
        The container for a single set of credentials for an account.
      type: object
      required:
        - type
        - username
      properties:
        type:
          description: The type of credentials for the profile. This should be indicative of when this specific credential should be used. Model Primitive Datatype = String.
          type: string
        username:
          description: The username. Model Primitive Datatype = NormalizedString.
          type: string
        password:
          description: The password in this set of credentials.  Care should be taken to ensure that no unencrypted value is revealed. Model Primitive Datatype = String.
          type: string
      additionalProperties: true
    DemographicsDType:
      description: |
        Demographics information is taken from the Common Educational Data Standards (CEDS) from the US government. (http://ceds.ed.gov). Note that demographics data is held in its own service, and that access to this service is considered privileged. Not all consumer keys will be able to request demographics data.
      type: object
      required:
        - sourcedId
        - status
        - dateLastModified
      properties:
        sourcedId:
          description: The sourcedId of the object. All objects MUST be identified by a Source Identifier. This is a GUID  System ID for an object. This is the GUID that SYSTEMS will refer to when making API calls, or when needing to identify an object. It is RECOMMENDED that systems are able to map whichever local ids (e.g. database key fields) they use to SourcedId.  The sourcedId of an object is considered an addressable property of an entity and as such will not be treated as Personally Identifiable Information (PII) by certified products.  Therefore, as a part of certification, vendors will be required to declare that they will notify customers via documentation or other formal and documented agreement that sourcedIds should never contain PII in general, but particularly users. This means that if a customer includes a student name in an enrollment.sourcedId, it will not fall to any certified product to protect the enrollment.sourcedId as PII, or even the userSourcedId field in the enrollment record. Model Primitive Datatype = String.
          type: string
        status:
          description: |
            All objects MUST BE either 'active' or 'tobedeleted'.  Something which is flagged 'tobedeleted' is to be considered safe to delete. Systems can delete records that are flagged as such if they wish, but they are not under any compulsion to do so. In v1.1 the enumeration value of 'inactive' was removed and so for backwards compatibility all such marked objects should be interpreted as 'tobedeleted'.
          type: string
          enum:
            - active
            - tobedeleted
        dateLastModified:
          description: All objects MUST be annotated with the dateTime upon which they were last modified. This enables requesters to query for just the latest objects. DateTimes MUST be expressed in W3C profile of [ISO 8601] and MUST contain the UTC timezone. Model Primitive Datatype = DateTime.
          type: string
          format: date-time
        metadata:
          $ref: "#/components/schemas/MetadataDType"
        birthDate:
          description: the date of birth. The format is [ISO 8601] of 'YYYY-MM-DD'. Model Primitive Datatype = Date.
          type: string
          format: date
        sex:
          description: |
            The sex of the individual. The permitted values are from an enumerated list.
          anyOf:
            - enum:
                - male
                - female
                - unspecified
                - other
              type: string
            - description: The data-type that enables an enumerated vocabulary to be extended. Model Primitive Datatype = NormalizedString.
              type: string
              pattern: "(ext:)[a-zA-Z0-9\\.\\-_]+"
        americanIndianOrAlaskaNative:
          description: |
            Identification of whether or not the user is an American Indian or Alaska Native ethnicity.
          type: string
          enum:
            - true
            - false
        asian:
          description: |
            Identification of whether or not the user is of Asian ethnicity.
          type: string
          enum:
            - true
            - false
        blackOrAfricanAmerican:
          description: |
            Identification of whether or not the user is black or African American ethnicity.
          type: string
          enum:
            - true
            - false
        nativeHawaiianOrOtherPacificIslander:
          description: |
            Identification of whether or not the user is Native Hawaiian or Other Pacific Islander ethnicity.
          type: string
          enum:
            - true
            - false
        white:
          description: |
            Identification of whether or not the user is of white ethnicity.
          type: string
          enum:
            - true
            - false
        demographicRaceTwoOrMoreRaces:
          description: |
            Identification of whether or not the user has a demographic of two or more race ethnicities.
          type: string
          enum:
            - true
            - false
        hispanicOrLatinoEthnicity:
          description: |
            Identification of whether or not the user is Hispanic or of Latino ethnicity.
          type: string
          enum:
            - true
            - false
        countryOfBirthCode:
          description: The country of birth code. The permitted vocabulary should be defined as part of the adoption and deployment process. See the Implementation Guide [OR-IMPL-12] for more details on how to define/use such a vocabulary. Model Primitive Datatype = NormalizedString.
          type: string
        stateOfBirthAbbreviation:
          description: The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a person was born. The permitted vocabulary should be defined as part of the adoption and deployment process. See the Implementation Guide [OR-IMPL-12] for more details on how to define/use such a vocabulary. Model Primitive Datatype = NormalizedString.
          type: string
        cityOfBirth:
          description: The name of the city in which the user was born. Model Primitive Datatype = NormalizedString.
          type: string
        publicSchoolResidenceStatus:
          description: An indication of the location of a person's legal residence relative to (within or outside) the boundaries of the public school attended and its administrative unit. The permitted vocabulary should be defined as part of the adoption and deployment process. See the Implementation Guide [OR-IMPL-12] for more details on how to define/use such a vocabulary. Model Primitive Datatype = NormalizedString.
          type: string
      additionalProperties: false
    DemographicsSetDType:
      description: |
        This is the container for a collection of demographics instances for a message payload. This may be empty if no instances are found that sustain the applied query constraints. The order is not significant.
      type: object
      properties:
        demographics:
          description: |
            The collection of demographics instances. The order is not significant. The corresponding query constraints may result in no instances being returned.
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/DemographicsDType"
      additionalProperties: false
    EnrollmentDType:
      description: |
        An enrollment is the name given to an individual taking part in a class. In the vast majority of cases, users will be students learning in a class, or teachers teaching the class. Other roles are also possible.
      type: object
      required:
        - sourcedId
        - status
        - dateLastModified
        - user
        - class
        - school
        - role
      properties:
        sourcedId:
          description: The sourcedId of the object. All objects MUST be identified by a Source Identifier. This is a GUID  System ID for an object. This is the GUID that SYSTEMS will refer to when making API calls, or when needing to identify an object. It is RECOMMENDED that systems are able to map whichever local ids (e.g. database key fields) they use to SourcedId.  The sourcedId of an object is considered an addressable property of an entity and as such will not be treated as Personally Identifiable Information (PII) by certified products.  Therefore, as a part of certification, vendors will be required to declare that they will notify customers via documentation or other formal and documented agreement that sourcedIds should never contain PII in general, but particularly users. This means that if a customer includes a student name in an enrollment.sourcedId, it will not fall to any certified product to protect the enrollment.sourcedId as PII, or even the userSourcedId field in the enrollment record. Model Primitive Datatype = String.
          type: string
        status:
          description: |
            All objects MUST BE either 'active' or 'tobedeleted'.  Something which is flagged 'tobedeleted' is to be considered safe to delete. Systems can delete records that are flagged as such if they wish, but they are not under any compulsion to do so. In v1.1 the enumeration value of 'inactive' was removed and so for backwards compatibility all such marked objects should be interpreted as 'tobedeleted'.
          type: string
          enum:
            - active
            - tobedeleted
        dateLastModified:
          description: All objects MUST be annotated with the dateTime upon which they were last modified. This enables requesters to query for just the latest objects. DateTimes MUST be expressed in W3C profile of [ISO 8601] and MUST contain the UTC timezone. Model Primitive Datatype = DateTime.
          type: string
          format: date-time
        metadata:
          $ref: "#/components/schemas/MetadataDType"
        user:
          $ref: "#/components/schemas/UserGUIDRefDType"
        class:
          $ref: "#/components/schemas/ClassGUIDRefDType"
        school:
          $ref: "#/components/schemas/OrgGUIDRefDType"
        role:
          description: |
            The role of the user for this class in the school e.g teacher, student, etc. This is from an enumerated vocabulary.
          anyOf:
            - enum:
                - administrator
                - proctor
                - student
                - teacher
              type: string
            - description: The data-type that enables an enumerated vocabulary to be extended. Model Primitive Datatype = NormalizedString.
              type: string
              pattern: "(ext:)[a-zA-Z0-9\\.\\-_]+"
        primary:
          description: |
            Applicable only to teachers. Only one teacher should be designated as the primary teacher for a class (this value set as 'true') in the period defined by the begin/end dates.
          type: string
          enum:
            - true
            - false
        beginDate:
          description: The start date for the enrollment (inclusive). This date must be within the period of the associated Academic Session for the class (Term/Semester/SchoolYear). Use the [ISO 8601] format of 'YYYY-MM-DD'. Model Primitive Datatype = Date.
          type: string
          format: date
        endDate:
          description: The end date for the enrollment (exclusive).  This date must be within the period of the associated Academic Session for the class (Term/Semester/SchoolYear). Use the [ISO 8601] format of 'YYYY-MM-DD'. Model Primitive Datatype = Date.
          type: string
          format: date
      additionalProperties: false
    EnrollmentSetDType:
      description: |
        This is the container for a collection of enrollment instances for a message payload. This may be empty if no instances are found that sustain the applied query constraints. The order is not significant.
      type: object
      properties:
        enrollments:
          description: |
            The collection of enrollment instances. The order is not significant. The corresponding query constraints may result in no instances being returned.
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/EnrollmentDType"
      additionalProperties: false
    OrgDType:
      description: |
        ORG is defined here as a structure for holding organizational information. An ORG might be a school, or it might be a local, statewide, or national entity. ORGs will typically have a parent ORG (up to the national level), and children, allowing a hierarchy to be established. School is defined here as the place where the learning happens. Most commonly this is the data that describes a bricks and mortar building, or, in the case of a virtual school, the virtual school organization. For enrollment and result reporting purposes, little information about this organization is required. A common example of a local organization is a school district.
      type: object
      required:
        - sourcedId
        - status
        - dateLastModified
        - name
        - type
        - identifier
      properties:
        sourcedId:
          description: The sourcedId of the object. All objects MUST be identified by a Source Identifier. This is a GUID  System ID for an object. This is the GUID that SYSTEMS will refer to when making API calls, or when needing to identify an object. It is RECOMMENDED that systems are able to map whichever local ids (e.g. database key fields) they use to SourcedId.  The sourcedId of an object is considered an addressable property of an entity and as such will not be treated as Personally Identifiable Information (PII) by certified products.  Therefore, as a part of certification, vendors will be required to declare that they will notify customers via documentation or other formal and documented agreement that sourcedIds should never contain PII in general, but particularly users. This means that if a customer includes a student name in an enrollment.sourcedId, it will not fall to any certified product to protect the enrollment.sourcedId as PII, or even the userSourcedId field in the enrollment record. Model Primitive Datatype = String.
          type: string
        status:
          description: |
            All objects MUST BE either 'active' or 'tobedeleted'.  Something which is flagged 'tobedeleted' is to be considered safe to delete. Systems can delete records that are flagged as such if they wish, but they are not under any compulsion to do so. In v1.1 the enumeration value of 'inactive' was removed and so for backwards compatibility all such marked objects should be interpreted as 'tobedeleted'.
          type: string
          enum:
            - active
            - tobedeleted
        dateLastModified:
          description: All objects MUST be annotated with the dateTime upon which they were last modified. This enables requesters to query for just the latest objects. DateTimes MUST be expressed in W3C profile of [ISO 8601] and MUST contain the UTC timezone. Model Primitive Datatype = DateTime.
          type: string
          format: date-time
        metadata:
          $ref: "#/components/schemas/MetadataDType"
        name:
          description: The name of the organization. Model Primitive Datatype = NormalizedString.
          type: string
        type:
          description: |
            The type of organization. This uses a predefined vocabulary.
          anyOf:
            - enum:
                - department
                - district
                - local
                - national
                - school
                - state
              type: string
            - description: The data-type that enables an enumerated vocabulary to be extended. Model Primitive Datatype = NormalizedString.
              type: string
              pattern: "(ext:)[a-zA-Z0-9\\.\\-_]+"
        identifier:
          description: Human readable identifier for this org e.g. NCES ID. Model Primitive Datatype = String.
          type: string
        parent:
          $ref: "#/components/schemas/OrgGUIDRefDType"
        children:
          description: |
            The 'sourcedIds' for the set of child organizations.
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/OrgGUIDRefDType"
      additionalProperties: false
    OrgSetDType:
      description: |
        This is the container for a collection of org instances for a message payload. This may be empty if no instances are found that sustain the applied query constraints. The order is not significant.
      type: object
      properties:
        orgs:
          description: |
            The collection of org instances. The order is not significant. The corresponding query constraints may result in no instances being returned.
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/OrgDType"
      additionalProperties: false
    ResourceGUIDRefDType:
      description: |
        This is the container for reference to a OneRoster 'Resourse' object that has an allocated sourcedId (GUID).
      type: object
      required:
        - href
        - sourcedId
        - type
      properties:
        href:
          description: The URI for the type of object being referenced. Model Primitive Datatype = AnyURI.
          type: string
          format: uri
        sourcedId:
          description: The globally unique identifier of the object being referenced. Model Primitive Datatype = String.
          type: string
        type:
          description: |
            The type of object being referenced i.e. a 'resource'.
          type: string
          enum:
            - resource
      additionalProperties: false
    RoleDType:
      description: |
        The container for one mapping between a role and an org for the user.
      type: object
      required:
        - roleType
        - role
        - org
      properties:
        roleType:
          description: |
            Indicates if this role is the primary or secondary role for that org. There MUST be one, and only one, primary role for each org.
          type: string
          enum:
            - primary
            - secondary
        role:
          description: |
            The role of the user in the org. The permitted values are from an enumerated list.
          anyOf:
            - enum:
                - aide
                - counselor
                - districtAdministrator
                - guardian
                - parent
                - principal
                - proctor
                - relative
                - siteAdministrator
                - student
                - systemAdministrator
                - teacher
              type: string
            - description: The data-type that enables an enumerated vocabulary to be extended. Model Primitive Datatype = NormalizedString.
              type: string
              pattern: "(ext:)[a-zA-Z0-9\\.\\-_]+"
        org:
          $ref: "#/components/schemas/OrgGUIDRefDType"
        userProfile:
          description: The identifier for the system/tool/app access account that is relevant to this role in the org. The equivalent UserProfile should exist with a 'profileId' equal to this identifier value. Model Primitive Datatype = AnyURI.
          type: string
          format: uri
        beginDate:
          description: The start date on which the role becomes active (inclusive).  Model Primitive Datatype = Date.
          type: string
          format: date
        endDate:
          description: The end date on which the role becomes inactive (exclusive).  Model Primitive Datatype = Date.
          type: string
          format: date
      additionalProperties: false
    SingleAcademicSessionDType:
      description: |
        This is the container for a single academicSession instance for a message payload.
      type: object
      required:
        - academicSession
      properties:
        academicSession:
          $ref: "#/components/schemas/AcademicSessionDType"
      additionalProperties: false
    SingleClassDType:
      description: |
        This is the container for a single class instance for a message payload.
      type: object
      required:
        - class
      properties:
        class:
          $ref: "#/components/schemas/ClassDType"
      additionalProperties: false
    SingleCourseDType:
      description: |
        This is the container for a single course instance for a message payload.
      type: object
      required:
        - course
      properties:
        course:
          $ref: "#/components/schemas/CourseDType"
      additionalProperties: false
    SingleDemographicsDType:
      description: |
        This is the container for a single demographics instance for a message payload.
      type: object
      required:
        - demographics
      properties:
        demographics:
          $ref: "#/components/schemas/DemographicsDType"
      additionalProperties: false
    SingleEnrollmentDType:
      description: |
        This is the container for a single enrollment instance for a message payload.
      type: object
      required:
        - enrollment
      properties:
        enrollment:
          $ref: "#/components/schemas/EnrollmentDType"
      additionalProperties: false
    SingleOrgDType:
      description: |
        This is the container for a single org instance for a message payload.
      type: object
      required:
        - org
      properties:
        org:
          $ref: "#/components/schemas/OrgDType"
      additionalProperties: false
    SingleUserDType:
      description: |
        This is the container for a single user instance for a message payload.
      type: object
      required:
        - user
      properties:
        user:
          $ref: "#/components/schemas/UserDType"
      additionalProperties: false
    UserDType:
      description: |
        Users, Teachers and Students are human beings that are teaching or studying in a class respectively. A single User class is used to represent both teachers and students and a role property is used to distinguish a user's natural role.Humans may have relationships with other humans. For example, a student may have parents. The 'agents' attribute allows for relationships between humans to be expressed. Note that these are typically from the point of view of the student - so a student will link to its parents (via the agent attribute). The reverse view MUST also be modeled, so for example, a user of role 'parent' MUST have agents that are of type 'student'. Note: Teachers MUST NOT be set as agents of students i.e. the teaching relationship is covered via enrollments.
      type: object
      required:
        - sourcedId
        - status
        - dateLastModified
        - enabledUser
        - givenName
        - familyName
        - roles
      properties:
        sourcedId:
          description: The sourcedId of the object. All objects MUST be identified by a Source Identifier. This is a GUID  System ID for an object. This is the GUID that SYSTEMS will refer to when making API calls, or when needing to identify an object. It is RECOMMENDED that systems are able to map whichever local ids (e.g. database key fields) they use to SourcedId.  The sourcedId of an object is considered an addressable property of an entity and as such will not be treated as Personally Identifiable Information (PII) by certified products.  Therefore, as a part of certification, vendors will be required to declare that they will notify customers via documentation or other formal and documented agreement that sourcedIds should never contain PII in general, but particularly users. This means that if a customer includes a student name in an enrollment.sourcedId, it will not fall to any certified product to protect the enrollment.sourcedId as PII, or even the userSourcedId field in the enrollment record. Model Primitive Datatype = String.
          type: string
        status:
          description: |
            All objects MUST BE either 'active' or 'tobedeleted'.  Something which is flagged 'tobedeleted' is to be considered safe to delete. Systems can delete records that are flagged as such if they wish, but they are not under any compulsion to do so. In v1.1 the enumeration value of 'inactive' was removed and so for backwards compatibility all such marked objects should be interpreted as 'tobedeleted'.
          type: string
          enum:
            - active
            - tobedeleted
        dateLastModified:
          description: All objects MUST be annotated with the dateTime upon which they were last modified. This enables requesters to query for just the latest objects. DateTimes MUST be expressed in W3C profile of [ISO 8601] and MUST contain the UTC timezone. Model Primitive Datatype = DateTime.
          type: string
          format: date-time
        metadata:
          $ref: "#/components/schemas/MetadataDType"
        userMasterIdentifier:
          description: The master unique identifier for this user. This is NOT the same as the user's interoperability 'sourcedId'. This should be used to ensure that all of the system identifiers/accounts etc. can be reconciled to the same user. How this identifier is assigned and its format is beyond the scope of this specification. Model Primitive Datatype = NormalizedString.
          type: string
        username:
          description: The user name assigned to the user. NOTE - This has been kept for backwards compatibility with OneRoster 1.1 and the new 'userProfiles' characteristic SHOULD be used instead. Model Primitive Datatype = NormalizedString.
          type: string
        userIds:
          description: |
            The set of external user identifiers that should be used for this user, if for some reason the sourcedId cannot be used. This might be an active directory id, an LTI id, or some other machine-readable identifier that is used for this person.
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/UserIdDType"
        enabledUser:
          description: |
            This is used to determine whether or not the record is active in the local system. 'false' denotes that the record is active but system access is curtailed according to the local administration rules.
          type: string
          enum:
            - true
            - false
        givenName:
          description: The given name. Also, known as the first name. Model Primitive Datatype = NormalizedString.
          type: string
        familyName:
          description: The family name. Also, known as the last name. Model Primitive Datatype = NormalizedString.
          type: string
        middleName:
          description: The set of middle names. If more than one middle name is needed separate using a space e.g. 'Wingarde Granville'. Model Primitive Datatype = NormalizedString.
          type: string
        preferredFirstName:
          description: The user's preferred first name. This attribute was added in version 1.2. Model Primitive Datatype = NormalizedString.
          type: string
        preferredMiddleName:
          description: The user's preferred middle name(s). This attribute was added in version 1.2. Model Primitive Datatype = NormalizedString.
          type: string
        preferredLastName:
          description: The user's preferred last name. This attribute was added in version 1.2. Model Primitive Datatype = NormalizedString.
          type: string
        pronouns:
          description: The pronoun(s) by which this person is referenced. Examples (in the case of English) include 'she/her/hers', 'he/him/his', 'they/them/theirs', 'ze/hir/hir', 'xe/xir', or a statement that the person's name should be used instead of any pronoun. Model Primitive Datatype = NormalizedString.
          type: string
        roles:
          description: |
            The set of roles for each of the orgs to which the user is affilliated. This is expressed as a set of role/org tuples.
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/RoleDType"
        userProfiles:
          description: |
            The set of system/app/tool profiles for the user.
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/UserProfileDType"
        primaryOrg:
          $ref: "#/components/schemas/OrgGUIDRefDType"
        identifier:
          description: An identifier for the user. NOTE - This characteristic is kept for backwards compatibility with OneRoster 1.1/1.0. The 'userIds' characteristic SHOULD be used instead. Model Primitive Datatype = String.
          type: string
        email:
          description: The email address for the user. Model Primitive Datatype = NormalizedString.
          type: string
        sms:
          description: The SMS number for the user. Model Primitive Datatype = NormalizedString.
          type: string
        phone:
          description: The phone number for the user. Model Primitive Datatype = NormalizedString.
          type: string
        agents:
          description: |
            The links to other people i.e. User 'sourcedIds'.
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/UserGUIDRefDType"
        grades:
          description: Grade(s) for which a user with role 'student' is enrolled. The permitted vocabulary should be defined as part of the adoption and deployment process. See the Implementation Guide [OR-IMPL-12] for more details on how to define/use such a vocabulary. Model Primitive Datatype = NormalizedString.
          type: array
          minItems: 0
          items:
            type: string
        password:
          description: A top-level password for the user. Care should be taken when using this field and the password SHOULD be encrypted. Model Primitive Datatype = String.
          type: string
        resources:
          description: |
            The identifiers (GUIDs) for the set of resources that are to be made available to the user. These are the sourcedIds that should be used for obtaining the metadata about the resources using the OR 1.2 Resources Service [OR-RES-SM-12].
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/ResourceGUIDRefDType"
      additionalProperties: false
    UserIdDType:
      description: |
        This is the set of external user identifiers that should be used for this user, if for some reason the sourcedId cannot be used. This might be an active directory id, an LTI id, or some other machine-readable identifier that is used for this person.
      type: object
      required:
        - type
        - identifier
      properties:
        type:
          description: The type of identifier. This is no predefined vocabuary. Model Primitive Datatype = NormalizedString.
          type: string
        identifier:
          description: The user identifier. Model Primitive Datatype = String.
          type: string
      additionalProperties: false
    UserProfileDType:
      description: |
        The container for the information about a User Profile that will provide the user with access to some system, application, tool, etc.
      type: object
      required:
        - profileId
        - profileType
        - vendorId
      properties:
        profileId:
          description: The unique identifier for the profile. This does not need to be a globally unique identifier but it must be unique within the scope of the user. Model Primitive Datatype = AnyURI.
          type: string
          format: uri
        profileType:
          description: The type of profile. This should be a human readable label that has some significance in the context of the related system, app, tool, etc. Model Primitive Datatype = NormalizedString.
          type: string
        vendorId:
          description: The unique identifier for the vendor of the system, tool, app, etc. which requires the use of this profile. Model Primitive Datatype = NormalizedString.
          type: string
        applicationId:
          description: Identifier for the application associated with the account. The nature, and how this identifier is assigned is not defined by this specification. This may have a value of 'default' to denote this account should be used for default access to all applications related to this vendor. Model Primitive Datatype = NormalizedString.
          type: string
        description:
          description: A human readable description of the use of the profile. This should not contain any security information for access to the account. Model Primitive Datatype = String.
          type: string
        credentials:
          description: |
            The set of credentials that are available for access to this profile.
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/CredentialDType"
      additionalProperties: false
    UserSetDType:
      description: |
        This is the container for a collection of user instances for a message payload. This may be empty if no instances are found that sustain the applied query constraints. The order is not significant.
      type: object
      properties:
        users:
          description: |
            The collection of user instances. The order is not significant. The corresponding query constraints may result in no instances being returned.
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/UserDType"
      additionalProperties: false
