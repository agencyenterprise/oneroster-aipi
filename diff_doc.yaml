paths:
  /academicSessions:
    post:
      requestBody:
        content:
          application/json:
            schema:
              {
                "academicSession": {
                  "sourcedId": "'$sourcedId_academicSession'",        // string - OPTIONAL
                  "title": "2023-2024 School Year",                   // string - REQUIRED
                  "startDate": "2023-08-15T00:00:00.000Z",           // string (ISO 8601) - REQUIRED
                  "endDate": "2024-05-30T00:00:00.000Z",             // string (ISO 8601) - REQUIRED
                  "type": "schoolYear",                               // string - REQUIRED (enum: ["schoolYear", "term", "semester", "gradingPeriod"])
                  "schoolYear": "2023",                               // string - REQUIRED
                  "org": {                                            // object - REQUIRED
                      "sourcedId": "'$org_sourcedId'"                 // string - REQUIRED
                  },
                  "class": {                                          // object - OPTIONAL
                      "sourcedId": "'$class_sourcedId'"               // string - REQUIRED if parent object included
                  },
                  "parent": {                                         // object - OPTIONAL
                      "sourcedId": "'$parent_academicSession_sourcedId'" // string - REQUIRED if parent object included
                  }
                }
              }
              
              // Required fields: ["title", "startDate", "endDate", "type", "schoolYear", "org.sourcedId"]
  /academicSessions/{sourcedId_academicSession}:
    put:
      requestBody:
        content:
          application/json:
            schema:
              {
                "academicSession": {
                  "sourcedId": "'$sourcedId_academicSession'",        // string - OPTIONAL
                  "title": "2023-2024 School Year",                   // string - REQUIRED
                  "startDate": "2023-08-15T00:00:00.000Z",           // string (ISO 8601) - REQUIRED
                  "endDate": "2024-05-30T00:00:00.000Z",             // string (ISO 8601) - REQUIRED
                  "type": "schoolYear",                               // string - REQUIRED (enum: ["schoolYear", "term", "semester", "gradingPeriod"])
                  "schoolYear": "2023",                               // string - REQUIRED
                  "org": {                                            // object - REQUIRED
                      "sourcedId": "'$org_sourcedId'"                 // string - REQUIRED
                  },
                  "class": {                                          // object - OPTIONAL
                      "sourcedId": "'$class_sourcedId'"               // string - REQUIRED if parent object included
                  },
                  "parent": {                                         // object - OPTIONAL
                      "sourcedId": "'$parent_academicSession_sourcedId'" // string - REQUIRED if parent object included
                  }
                }
              }
              
              // Required fields: ["title", "startDate", "endDate", "type", "schoolYear", "org.sourcedId"]
  /terms:
    post:
      requestBody:
        content:
          application/json:
            schema:
              {
                "academicSession": {
                  "sourcedId": "'$sourcedId_term'",                   // string - OPTIONAL
                  "status": "active",                                 // string - OPTIONAL (enum: ["active", "tobedeleted"], default: "active")
                  "title": "Term 1 2024",                            // string - REQUIRED
                  "type": "term",                                    // string - REQUIRED (enum: ["schoolYear", "term", "semester", "gradingPeriod"])
                  "startDate": "2024-01-15",                         // string (ISO 8601) - REQUIRED
                  "endDate": "2024-05-30",                           // string (ISO 8601) - REQUIRED
                  "parent": {                                        // object - OPTIONAL
                      "sourcedId": "'$parent_academicSession_sourcedId'" // string - REQUIRED if parent object included
                  },
                  "schoolYear": "2024",                              // string - REQUIRED
                  "org": {                                           // object - REQUIRED
                      "sourcedId": "'$org_sourcedId'"                // string - REQUIRED
                  }
                }
              }
              
              // Required fields: ["title", "startDate", "endDate", "type", "schoolYear", "org.sourcedId"]
  /terms/{sourcedId_term}:
    put:
      requestBody:
        content:
          application/json:
            schema:
              {
                "academicSession": {
                  "sourcedId": "'$sourcedId_term'",                   // string - OPTIONAL
                  "status": "active",                                 // string - OPTIONAL (enum: ["active", "tobedeleted"], default: "active")
                  "title": "Term 1 2024",                            // string - REQUIRED
                  "type": "term",                                    // string - REQUIRED (enum: ["schoolYear", "term", "semester", "gradingPeriod"])
                  "startDate": "2024-01-15",                         // string (ISO 8601) - REQUIRED
                  "endDate": "2024-05-30",                           // string (ISO 8601) - REQUIRED
                  "parent": {                                        // object - OPTIONAL
                      "sourcedId": "'$parent_academicSession_sourcedId'" // string - REQUIRED if parent object included
                  },
                  "schoolYear": "2024",                              // string - REQUIRED
                  "org": {                                           // object - REQUIRED
                      "sourcedId": "'$org_sourcedId'"                // string - REQUIRED
                  }
                }
              }
              
              // Required fields: ["title", "startDate", "endDate", "type", "schoolYear", "org.sourcedId"]
  /terms/{termSourcedId}/gradingPeriods:
    post:
      requestBody:
        content:
          application/json:
            schema:
              {
                "academicSession": {
                  "sourcedId": "'$sourcedId_gradingPeriod'",         // string - OPTIONAL
                  "status": "active",                                // string - OPTIONAL (enum: ["active", "tobedeleted"], default: "active")
                  "title": "'$gradingPeriod_title'",                 // string - REQUIRED
                  "type": "gradingPeriod",                          // string - REQUIRED (must be "gradingPeriod")
                  "startDate": "2024-01-15",                        // string (ISO 8601) - REQUIRED
                  "endDate": "2024-03-15",                          // string (ISO 8601) - REQUIRED
                  "parent": {                                       // object - OPTIONAL
                      "sourcedId": "'$parent_academicSession_sourcedId'" // string - REQUIRED if parent object included
                  },
                  "schoolYear": "2024",                             // string - REQUIRED
                  "org": {                                          // object - REQUIRED
                      "sourcedId": "'$org_sourcedId'"               // string - REQUIRED
                  }
                }
              }
              
              // Required fields: ["title", "startDate", "endDate", "type", "schoolYear", "org.sourcedId"]
              // Note: type MUST be "gradingPeriod" for this endpoint
  /classes:
    post:
      requestBody:
        content:
          application/json:
            schema:
              {
                "class": {
                  "sourcedId": "'$sourcedId_class'",              // string - OPTIONAL
                  "status": "active",                             // string - OPTIONAL (enum: ["active", "tobedeleted"], default: "active")
                  "dateLastModified": "2024-01-15T12:00:00Z",    // string - OPTIONAL (datetime)
                  "metadata": {                                   // object - OPTIONAL
                    "test": "test"
                  },
                  "title": "Algebra I PUT EDIT",                  // string - REQUIRED
                  "classCode": "ALG101-01",                      // string - OPTIONAL
                  "classType": "scheduled",                      // string - OPTIONAL (enum: ClassType.enumValues, default: "scheduled")
                  "location": "Room 204",                        // string - OPTIONAL
                  "grades": ["9"],                              // array<string> - OPTIONAL
                  "subjects": ["Mathematics"],                   // array<string> - OPTIONAL
                  "subjectCodes": ["MATH"],                     // array<string> - OPTIONAL
                  "periods": ["1", "2"],                        // array<string> - OPTIONAL
                  "resources": [                                // array - OPTIONAL
                    {
                      "sourcedId": "'$resources_sourcedId'"      // string - REQUIRED if resources included
                    }
                  ],
                  "course": {                                   // object - REQUIRED
                    "sourcedId": "'$course_sourcedId'"          // string - REQUIRED
                  },
                  "org": {                                     // object - REQUIRED
                    "sourcedId": "'$school_sourcedId'"          // string - REQUIRED
                  },
                  "session": {                                 // object - OPTIONAL
                    "sourcedId": "'$term_sourcedId'"           // string - REQUIRED if session included
                  },
                  "academicSessions": [                        // array - REQUIRED (min: 1)
                    {
                      "title": "2023-2024 School Year",        // string - REQUIRED
                      "startDate": "2023-08-15",              // string - REQUIRED (YYYY-MM-DD)
                      "endDate": "2024-05-30",                // string - REQUIRED (YYYY-MM-DD)
                      "type": "term",                         // string - REQUIRED (enum: SessionType.enumValues)
                      "schoolYear": "2023"                    // string - REQUIRED
                    }
                  ]
                }
              }
              
              // Required fields: ["title", "course", "org", "academicSessions"]
              // Required fields for each academicSession: ["title", "startDate", "endDate", "type", "schoolYear"]
  /classes/{sourcedId_class}:
    put:
      requestBody:
        content:
          application/json:
            schema:
              {
                "class": {
                  "sourcedId": "'$sourcedId_class'",              // string - OPTIONAL
                  "status": "active",                             // string - OPTIONAL (enum: ["active", "tobedeleted"], default: "active")
                  "dateLastModified": "2024-01-15T12:00:00Z",    // string - OPTIONAL (datetime)
                  "metadata": {                                   // object - OPTIONAL
                    "test": "test"
                  },
                  "title": "Algebra I PUT EDIT",                  // string - REQUIRED
                  "classCode": "ALG101-01",                      // string - OPTIONAL
                  "classType": "scheduled",                      // string - OPTIONAL (enum: ClassType.enumValues, default: "scheduled")
                  "location": "Room 204",                        // string - OPTIONAL
                  "grades": ["9"],                              // array<string> - OPTIONAL
                  "subjects": ["Mathematics"],                   // array<string> - OPTIONAL
                  "subjectCodes": ["MATH"],                     // array<string> - OPTIONAL
                  "periods": ["1", "2"],                        // array<string> - OPTIONAL
                  "resources": [                                // array - OPTIONAL
                    {
                      "sourcedId": "'$resources_sourcedId'"      // string - REQUIRED if resources included
                    }
                  ],
                  "course": {                                   // object - REQUIRED
                    "sourcedId": "'$course_sourcedId'"          // string - REQUIRED
                  },
                  "org": {                                     // object - REQUIRED
                    "sourcedId": "'$school_sourcedId'"          // string - REQUIRED
                  },
                  "session": {                                 // object - OPTIONAL
                    "sourcedId": "'$term_sourcedId'"           // string - REQUIRED if session included
                  },
                  "academicSessions": [                        // array - REQUIRED (min: 1)
                    {
                      "title": "2023-2024 School Year",        // string - REQUIRED
                      "startDate": "2023-08-15",              // string - REQUIRED (YYYY-MM-DD)
                      "endDate": "2024-05-30",                // string - REQUIRED (YYYY-MM-DD)
                      "type": "term",                         // string - REQUIRED (enum: SessionType.enumValues)
                      "schoolYear": "2023"                    // string - REQUIRED
                    }
                  ]
                }
              }
              
              // Required fields: ["title", "course", "org", "academicSessions"]
              // Required fields for each academicSession: ["title", "startDate", "endDate", "type", "schoolYear"]
  /classes/{classSourcedId}/students:
    post:
      requestBody:
        content:
          application/json:
            schema:
              {
                "enrollment": {
                  "sourcedId": "'$sourcedId_enrollment'",         // string - OPTIONAL
                  "status": "active",                             // string - OPTIONAL (enum: ["active", "tobedeleted"], default: "active")
                  "metadata": {                                   // object - OPTIONAL
                      "test": "test"
                  },
                  "role": "student",                             // string - REQUIRED (must be "student" for this endpoint)
                  "user": {                                      // object - REQUIRED
                      "sourcedId": "'$student_sourcedId'"         // string - REQUIRED
                  },
                  "primary": true,                               // boolean - OPTIONAL (default: false)
                  "beginDate": "2024-08-26",                     // string (YYYY-MM-DD) - OPTIONAL
                  "endDate": "2025-05-15"                        // string (YYYY-MM-DD) - OPTIONAL
                }
              }
              
              // Required fields: ["user.sourcedId"]
              // Note: This endpoint specifically enrolls students, so role is implicitly "student"
  /classes/{classSourcedId}/teachers:
    post:
      requestBody:
        content:
          application/json:
            schema:
              {
                "enrollment": {
                  "sourcedId": "'$sourcedId_enrollment'",         // string - OPTIONAL
                  "status": "active",                             // string - OPTIONAL (enum: ["active", "tobedeleted"], default: "active")
                  "metadata": {                                   // object - OPTIONAL
                      "test": "test"
                  },
                  "role": "teacher",                             // string - REQUIRED (must be "teacher" for this endpoint)
                  "user": {                                      // object - REQUIRED
                      "sourcedId": "'$teacher_sourcedId'"         // string - REQUIRED
                  },
                  "primary": true,                               // boolean - OPTIONAL (default: false)
                  "beginDate": "2024-08-26",                     // string (YYYY-MM-DD) - OPTIONAL
                  "endDate": "2025-05-15"                        // string (YYYY-MM-DD) - OPTIONAL
                }
              }
              
              // Required fields: ["user.sourcedId"]
              // Note: This endpoint specifically enrolls teachers, so role is implicitly "teacher"
  /courses:
    post:
      requestBody:
        content:
          application/json:
            schema:
              {
                "course": {
                  "sourcedId": "'$sourcedId_course'",            // string - OPTIONAL
                  "status": "active",                            // string - OPTIONAL (enum: ["active", "tobedeleted"], default: "active")
                  "metadata": { ... },                           // object - OPTIONAL (not shown in example but allowed)
                  "title": "Algebra I Course",                   // string - REQUIRED
                  "courseCode": "ALG101",                        // string - OPTIONAL
                  "grades": "9",                                 // string - OPTIONAL
                  "subjects": "Mathematics",                     // string - OPTIONAL
                  "subjectCodes": "MATH",                       // string - OPTIONAL
                  "org": {                                      // object - REQUIRED
                      "sourcedId": "'$school_sourcedId'"         // string - REQUIRED
                  }
                }
              }
              
              // Required fields: ["title", "org.sourcedId"]
  /courses/{sourcedId_course}:
    put:
      requestBody:
        content:
          application/json:
            schema:
              {
                "course": {
                  "sourcedId": "'$sourcedId_course'",            // string - OPTIONAL
                  "status": "active",                            // string - OPTIONAL (enum: ["active", "tobedeleted"], default: "active")
                  "metadata": { ... },                           // object - OPTIONAL (not shown in example but allowed)
                  "title": "Algebra I Course",                   // string - REQUIRED
                  "courseCode": "ALG101",                        // string - OPTIONAL
                  "grades": "9",                                 // string - OPTIONAL
                  "subjects": "Mathematics",                     // string - OPTIONAL
                  "subjectCodes": "MATH",                       // string - OPTIONAL
                  "org": {                                      // object - REQUIRED
                      "sourcedId": "'$school_sourcedId'"         // string - REQUIRED
                  }
                }
              }
              
              // Required fields: ["title", "org.sourcedId"]
  /users:
    post:
      requestBody:
        content:
          application/json:
            schema:
              {
                "user": {
                  "sourcedId": "'$sourcedId_user'",              // string - OPTIONAL
                  "status": "active",                            // string - OPTIONAL (enum: ["active", "tobedeleted"], default: "active")
                  "metadata": {                                  // object - OPTIONAL
                    "test": "test"
                  },
                  "userMasterIdentifier": "12345",              // string - OPTIONAL, nullable
                  "username": "jsmith",                          // string - OPTIONAL
                  "userIds": [                                   // array - OPTIONAL
                    {
                      "type": "district",
                      "identifier": "12345"
                    }
                  ],
                  "enabledUser": true,                          // boolean - REQUIRED
                  "givenName": "John",                          // string - REQUIRED
                  "familyName": "Smith",                        // string - REQUIRED
                  "middleName": "Robert",                       // string - OPTIONAL, nullable
                  "roles": [                                    // array - REQUIRED (min: 1)
                    {
                      "roleType": "primary",                    // string - REQUIRED (enum: roleTypeValues)
                      "role": "student",                        // string - REQUIRED (enum: roleValues)
                      "org": {                                  // object - REQUIRED
                        "sourcedId": "'$org_sourcedId'"         // string - REQUIRED
                      },
                      "userProfile": "profile-123",             // string - OPTIONAL
                      "beginDate": "2024-01-15",               // string - OPTIONAL (YYYY-MM-DD)
                      "endDate": "2024-12-31"                  // string - OPTIONAL (YYYY-MM-DD)
                    }
                  ],
                  "primaryOrg": {                              // object - OPTIONAL
                    "sourcedId": "'$org_sourcedId'"            // string - REQUIRED if primaryOrg included
                  },
                  "email": "john.smith@school.edu",            // string - OPTIONAL, nullable (must be valid email)
                  "preferredFirstName": "Johnny",              // string - OPTIONAL, nullable
                  "preferredMiddleName": "Rob",                // string - OPTIONAL, nullable
                  "preferredLastName": "Smithy",               // string - OPTIONAL, nullable
                  "pronouns": "he/him",                        // string - OPTIONAL, nullable
                  "grades": ["9", "10"],                       // string[] - OPTIONAL
                  "password": "hashedPassword123",             // string - OPTIONAL, nullable
                  "sms": "+1234567890",                        // string - OPTIONAL, nullable
                  "phone": "+1234567890",                      // string - OPTIONAL, nullable
                  "userProfiles": [                            // array - OPTIONAL
                    {
                      "profileId": "profile-123",              // string - REQUIRED if userProfiles included
                      "profileType": "academic",               // string - REQUIRED if userProfiles included
                      "vendorId": "vendor-123",               // string - REQUIRED if userProfiles included
                      "applicationId": "app-123",             // string - OPTIONAL
                      "description": "Academic profile",      // string - OPTIONAL
                      "credentials": []                       // array - OPTIONAL
                    }
                  ]
                }
              }
              
              // Required fields: ["enabledUser", "givenName", "familyName", "roles"]
              // Note: Must have exactly one primary role per organization (enforced by schema refinement)
  /users/{sourcedId_user}:
    put:
      requestBody:
        content:
          application/json:
            schema:
              {
                "user": {
                  "sourcedId": "'$sourcedId_user'",              // string - OPTIONAL
                  "status": "active",                            // string - OPTIONAL (enum: ["active", "tobedeleted"], default: "active")
                  "metadata": {                                  // object - OPTIONAL
                    "test": "test"
                  },
                  "userMasterIdentifier": "12345",              // string - OPTIONAL, nullable
                  "username": "jsmith",                          // string - OPTIONAL
                  "userIds": [                                   // array - OPTIONAL
                    {
                      "type": "district",
                      "identifier": "12345"
                    }
                  ],
                  "enabledUser": true,                          // boolean - REQUIRED
                  "givenName": "John",                          // string - REQUIRED
                  "familyName": "Smith",                        // string - REQUIRED
                  "middleName": "Robert",                       // string - OPTIONAL, nullable
                  "roles": [                                    // array - REQUIRED (min: 1)
                    {
                      "roleType": "primary",                    // string - REQUIRED (enum: roleTypeValues)
                      "role": "student",                        // string - REQUIRED (enum: roleValues)
                      "org": {                                  // object - REQUIRED
                        "sourcedId": "'$org_sourcedId'"         // string - REQUIRED
                      },
                      "userProfile": "profile-123",             // string - OPTIONAL
                      "beginDate": "2024-01-15",               // string - OPTIONAL (YYYY-MM-DD)
                      "endDate": "2024-12-31"                  // string - OPTIONAL (YYYY-MM-DD)
                    }
                  ],
                  "primaryOrg": {                              // object - OPTIONAL
                    "sourcedId": "'$org_sourcedId'"            // string - REQUIRED if primaryOrg included
                  },
                  "email": "john.smith@school.edu",            // string - OPTIONAL, nullable (must be valid email)
                  "preferredFirstName": "Johnny",              // string - OPTIONAL, nullable
                  "preferredMiddleName": "Rob",                // string - OPTIONAL, nullable
                  "preferredLastName": "Smithy",               // string - OPTIONAL, nullable
                  "pronouns": "he/him",                        // string - OPTIONAL, nullable
                  "grades": ["9", "10"],                       // string[] - OPTIONAL
                  "password": "hashedPassword123",             // string - OPTIONAL, nullable
                  "sms": "+1234567890",                        // string - OPTIONAL, nullable
                  "phone": "+1234567890",                      // string - OPTIONAL, nullable
                  "userProfiles": [                            // array - OPTIONAL
                    {
                      "profileId": "profile-123",              // string - REQUIRED if userProfiles included
                      "profileType": "academic",               // string - REQUIRED if userProfiles included
                      "vendorId": "vendor-123",               // string - REQUIRED if userProfiles included
                      "applicationId": "app-123",             // string - OPTIONAL
                      "description": "Academic profile",      // string - OPTIONAL
                      "credentials": []                       // array - OPTIONAL
                    }
                  ]
                }
              }
              
              // Required fields: ["enabledUser", "givenName", "familyName", "roles"]
              // Note: Must have exactly one primary role per organization (enforced by schema refinement)
  /orgs:
    post:
      requestBody:
        content:
          application/json:
            schema:
              {
                "org": {
                  "sourcedId": "'$sourcedId_org'",              // string - OPTIONAL
                  "status": "active",                           // string - OPTIONAL (enum: ["active", "tobedeleted"], default: "active")
                  "metadata": {                                 // object - OPTIONAL
                    "test": "test"
                  },
                  "name": "District 100",                       // string - REQUIRED
                  "type": "district",                          // string - REQUIRED (enum: orgTypeValues)
                  "identifier": "D100",                        // string - OPTIONAL
                  "parent": {                                  // object - OPTIONAL
                    "sourcedId": "'$org_sourcedId'"            // string - REQUIRED if parent included
                  }
                }
              }
              
              // Required fields: ["name", "type"]
              // Note: type must be one of OrgType.enumValues (e.g., "district", "school", etc.)
  /orgs/{sourcedId_org}:
    put:
      requestBody:
        content:
          application/json:
            schema:
              {
                "org": {
                  "sourcedId": "'$sourcedId_org'",              // string - OPTIONAL
                  "status": "active",                           // string - OPTIONAL (enum: ["active", "tobedeleted"], default: "active")
                  "metadata": {                                 // object - OPTIONAL
                    "test": "test"
                  },
                  "name": "District 100",                       // string - REQUIRED
                  "type": "district",                          // string - REQUIRED (enum: orgTypeValues)
                  "identifier": "D100",                        // string - OPTIONAL
                  "parent": {                                  // object - OPTIONAL
                    "sourcedId": "'$org_sourcedId'"            // string - REQUIRED if parent included
                  }
                }
              }
              
              // Required fields: ["name", "type"]
              // Note: type must be one of OrgType.enumValues (e.g., "district", "school", etc.)
  /schools:
    post:
      requestBody:
        content:
          application/json:
            schema:
              {
                "org": {
                  "sourcedId": "'$sourcedId_school'",           // string - OPTIONAL
                  "status": "active",                           // string - OPTIONAL (enum: ["active", "tobedeleted"], default: "active")
                  "metadata": {                                 // object - OPTIONAL
                    "test": "test"
                  },
                  "name": "Lincoln High School",                // string - REQUIRED
                  "type": "school",                            // string - REQUIRED (must be "school")
                  "identifier": "LHS",                         // string - OPTIONAL
                  "parent": {                                  // object - OPTIONAL
                    "sourcedId": "'$org_sourcedId'"            // string - REQUIRED if parent included
                  }
                }
              }
              
              // Required fields: ["name", "type"]
              // Note: type MUST be "school" for this endpoint
  /schools/{sourcedId_school}:
    put:
      requestBody:
        content:
          application/json:
            schema:
              {
                "org": {
                  "sourcedId": "'$sourcedId_school'",           // string - OPTIONAL
                  "status": "active",                           // string - OPTIONAL (enum: ["active", "tobedeleted"], default: "active")
                  "metadata": {                                 // object - OPTIONAL
                    "test": "test"
                  },
                  "name": "Lincoln High School",                // string - REQUIRED
                  "type": "school",                            // string - REQUIRED (must be "school")
                  "identifier": "LHS",                         // string - OPTIONAL
                  "parent": {                                  // object - OPTIONAL
                    "sourcedId": "'$org_sourcedId'"            // string - REQUIRED if parent included
                  }
                }
              }
              
              // Required fields: ["name", "type"]
              // Note: type MUST be "school" for this endpoint
  /enrollments:
    post:
      requestBody:
        content:
          application/json:
            schema:
              {
                "enrollment": {
                  "sourcedId": "'$sourcedId_enrollment'",         // string - OPTIONAL
                  "status": "active",                             // string - OPTIONAL (enum: ["active", "tobedeleted"], default: "active")
                  "metadata": {                                   // object - OPTIONAL
                    "test": "test"
                  },
                  "role": "student",                             // string - REQUIRED (enum: enrollmentRoleValues)
                  "primary": true,                               // boolean - OPTIONAL (default: false)
                  "beginDate": "2024-08-26",                     // string - OPTIONAL (YYYY-MM-DD)
                  "endDate": "2025-05-15",                       // string - OPTIONAL (YYYY-MM-DD)
                  "user": {                                      // object - REQUIRED
                    "sourcedId": "'$student_sourcedId'"          // string - REQUIRED
                  },
                  "class": {                                     // object - REQUIRED
                    "sourcedId": "'$class_sourcedId'"            // string - REQUIRED
                  }
                }
              }
              
              // Required fields: ["role", "user.sourcedId", "class.sourcedId"]
              // Note: dates must be in YYYY-MM-DD format (validated by dateSchema)
              // Note: role must be one of enrollmentRoleValues (e.g., "student", "teacher", etc.)
  /enrollments/{sourcedId_enrollment}:
    put:
      requestBody:
        content:
          application/json:
            schema:
              {
                "enrollment": {
                  "sourcedId": "'$sourcedId_enrollment'",         // string - OPTIONAL
                  "status": "active",                             // string - OPTIONAL (enum: ["active", "tobedeleted"], default: "active")
                  "metadata": {                                   // object - OPTIONAL
                    "test": "test"
                  },
                  "role": "student",                             // string - REQUIRED (enum: enrollmentRoleValues)
                  "primary": true,                               // boolean - OPTIONAL (default: false)
                  "beginDate": "2024-08-26",                     // string - OPTIONAL (YYYY-MM-DD)
                  "endDate": "2025-05-15",                       // string - OPTIONAL (YYYY-MM-DD)
                  "user": {                                      // object - REQUIRED
                    "sourcedId": "'$student_sourcedId'"          // string - REQUIRED
                  },
                  "class": {                                     // object - REQUIRED
                    "sourcedId": "'$class_sourcedId'"            // string - REQUIRED
                  }
                }
              }
              
              // Required fields: ["role", "user.sourcedId", "class.sourcedId"]
              // Note: dates must be in YYYY-MM-DD format
              // Note: role must be one of enrollmentRoleValues (e.g., "student", "teacher", etc.)
  /gradingPeriods:
    post:
      requestBody:
        content:
          application/json:
            schema:
              {
                "academicSession": {
                  "sourcedId": "'$sourcedId_gradingPeriod'",     // string - OPTIONAL
                  "status": "active",                             // string - OPTIONAL (enum: ["active", "tobedeleted"], default: "active")
                  "metadata": {                                   // object - OPTIONAL
                    "test": "test"
                  },
                  "title": "Q1 2024",                            // string - REQUIRED
                  "type": "gradingPeriod",                       // string - REQUIRED (must be "gradingPeriod")
                  "startDate": "2024-01-15",                     // string - REQUIRED (ISO date string)
                  "endDate": "2024-03-15",                       // string - REQUIRED (ISO date string)
                  "parent": {                                    // object - OPTIONAL
                    "sourcedId": "'$parent_academicSession_sourcedId'" // string - REQUIRED if parent included
                  },
                  "schoolYear": "2024",                          // string - REQUIRED
                  "org": {                                       // object - REQUIRED
                    "sourcedId": "'$org_sourcedId'"              // string - REQUIRED
                  },
                  "class": {                                     // object - OPTIONAL
                    "sourcedId": "class123"                      // string - REQUIRED if class included
                  }
                }
              }
              
              // Required fields: ["title", "type", "startDate", "endDate", "schoolYear", "org.sourcedId"]
              // Note: type MUST be "gradingPeriod" for this endpoint
              // Note: dates must be in ISO date string format
  /gradingPeriods/{sourcedId}:
    put:
      requestBody:
        content:
          application/json:
            schema:
              {
                "academicSession": {
                  "sourcedId": "'$sourcedId_gradingPeriod'",     // string - OPTIONAL
                  "status": "active",                             // string - OPTIONAL (enum: ["active", "tobedeleted"], default: "active")
                  "metadata": {                                   // object - OPTIONAL
                    "test": "test"
                  },
                  "title": "Q1 2024",                            // string - REQUIRED
                  "type": "gradingPeriod",                       // string - REQUIRED (must be "gradingPeriod")
                  "startDate": "2024-01-15",                     // string - REQUIRED (ISO date string)
                  "endDate": "2024-03-15",                       // string - REQUIRED (ISO date string)
                  "parent": {                                    // object - OPTIONAL
                    "sourcedId": "'$parent_academicSession_sourcedId'" // string - REQUIRED if parent included
                  },
                  "schoolYear": "2024",                          // string - REQUIRED
                  "org": {                                       // object - REQUIRED
                    "sourcedId": "'$org_sourcedId'"              // string - REQUIRED
                  },
                  "class": {                                     // object - OPTIONAL
                    "sourcedId": "class123"                      // string - REQUIRED if class included
                  }
                }
              }
              
              // Required fields: ["title", "type", "startDate", "endDate", "schoolYear", "org.sourcedId"]
              // Note: type MUST be "gradingPeriod" for this endpoint
              // Note: dates must be in ISO date string format
  /resources:
    post:
      requestBody:
        content:
          application/json:
            schema:
              {
                "resource": {
                  "sourcedId": "'$resources_sourcedId'",         // string - OPTIONAL
                  "status": "active",                            // string - OPTIONAL (enum: StatusType.enumValues, default: "active")
                  "dateLastModified": "2025-01-11T00:33:43.629Z", // string - OPTIONAL (datetime)
                  "metadata": {                                  // object - OPTIONAL, nullable
                    "format": "digits",
                    "type": "textbook",
                    "accessHistory": {
                      "totalAccesses": 1250,
                      "averageTimeSpent": "30 minutes",
                      "lastUpdated": "2025-01-11T00:33:43.629Z"
                    }
                  },
                  "title": "Algebra I Textbook",                 // string - REQUIRED
                  "roles": ["primary"],                          // array - OPTIONAL (enum: ["primary", "secondary"])
                  "importance": "primary",                       // string - OPTIONAL (enum: ["primary", "secondary"])
                  "vendorResourceId": "ee42cb40-35b2-4092-8ae8-c5e6f07ac785", // string - REQUIRED
                  "vendorId": "pearson_ed",                     // string - OPTIONAL
                  "applicationId": "digital_textbook"            // string - OPTIONAL
                }
              }
              
              // Required fields: ["title", "vendorResourceId"]
  /resources/{resources_sourcedId}:
    put:
      requestBody:
        content:
          application/json:
            schema:
              {
                "resource": {
                  "sourcedId": "'$resources_sourcedId'",         // string - OPTIONAL
                  "status": "active",                            // string - OPTIONAL (enum: StatusType.enumValues, default: "active")
                  "dateLastModified": "2025-01-11T00:33:43.629Z", // string - OPTIONAL (datetime)
                  "metadata": {                                  // object - OPTIONAL, nullable
                    "format": "digits",
                    "type": "textbook",
                    "accessHistory": {
                      "totalAccesses": 1250,
                      "averageTimeSpent": "30 minutes",
                      "lastUpdated": "2025-01-11T00:33:43.629Z"
                    }
                  },
                  "title": "Algebra I Textbook",                 // string - REQUIRED
                  "roles": ["primary"],                          // array - OPTIONAL (enum: ["primary", "secondary"])
                  "importance": "primary",                       // string - OPTIONAL (enum: ["primary", "secondary"])
                  "vendorResourceId": "ee42cb40-35b2-4092-8ae8-c5e6f07ac785", // string - REQUIRED
                  "vendorId": "pearson_ed",                     // string - OPTIONAL
                  "applicationId": "digital_textbook"            // string - OPTIONAL
                }
              }
              
              // Required fields: ["title", "vendorResourceId"]
  /assessmentLineItems/{sourcedId_assessmentLineItem}:
    put:
      requestBody:
        content:
          application/json:
            schema:
              {
                "assessmentLineItem": {
                  "sourcedId": "'$sourcedId_assessmentLineItem'",  // string - OPTIONAL
                  "status": "active",                              // string - OPTIONAL (enum: StatusType.enumValues, default: "active")
                  "dateLastModified": "2024-01-15T12:00:00Z",     // string - OPTIONAL (datetime)
                  "metadata": {                                    // object - OPTIONAL
                    "weight": "30",
                    "duration": "120",
                    "allowCalculator": true
                  },
                  "title": "Chapter 1 Test",                       // string - REQUIRED
                  "description": "End of chapter test",            // string - OPTIONAL
                  "class": {                                      // object - OPTIONAL
                    "sourcedId": "'$class_sourcedId'"             // string - REQUIRED if class included
                  },
                  "parentAssessmentLineItem": {                   // object - OPTIONAL
                    "sourcedId": "'$assessmentLineItem_sourcedId'" // string - REQUIRED if parentAssessmentLineItem included
                  },
                  "scoreScale": {                                 // object - OPTIONAL
                    "sourcedId": "'$scoreScale_sourcedId'"        // string - REQUIRED if scoreScale included
                  },
                  "resultValueMin": 0,                            // number - OPTIONAL
                  "resultValueMax": 100,                          // number - OPTIONAL
                  "learningObjectiveSet": [                       // array - OPTIONAL
                    {
                      "source": "Common Core",                    // string - REQUIRED if learningObjectiveSet included
                      "learningObjectiveIds": [                   // array - REQUIRED if learningObjectiveSet included
                        {
                          "learningObjectiveId": "12345",         // string - REQUIRED
                          "score": 89,                            // number - OPTIONAL
                          "textScore": "89"                       // string - OPTIONAL
                        }
                      ]
                    }
                  ]
                }
              }
              
              // Required fields: ["title"]
  /assessmentResults/{sourcedId_assessmentResults}:
    put:
      requestBody:
        content:
          application/json:
            schema:
              {
                "assessmentResult": {
                  "sourcedId": "'$sourcedId_assessmentResults'",    // string - OPTIONAL
                  "status": "active",                               // string - OPTIONAL (enum: StatusType.enumValues, default: "active")
                  "dateLastModified": "2024-01-15T12:00:00Z",      // string - OPTIONAL (datetime)
                  "metadata": {                                     // object - OPTIONAL
                    "weight": "30",
                    "duration": "120",
                    "allowCalculator": true
                  },
                  "assessmentLineItemSourcedId": {                  // object - REQUIRED
                    "sourcedId": "'$assessmentLineItem_sourcedId'"  // string - REQUIRED
                  },
                  "studentSourcedId": {                            // object - REQUIRED
                    "sourcedId": "'$student_sourcedId'"            // string - REQUIRED
                  },
                  "score": 90,                                     // number - OPTIONAL, nullable
                  "textScore": "90",                               // string - OPTIONAL, nullable
                  "scoreDate": "2023-12-15T00:00:00.000Z",        // string - REQUIRED (datetime)
                  "scoreScaleSourcedId": {                         // object - OPTIONAL
                    "sourcedId": "'$scoreScale_sourcedId'"         // string - REQUIRED if scoreScaleSourcedId included
                  },
                  "scorePercentile": 85,                          // number - OPTIONAL, nullable
                  "scoreStatus": "fully graded",                  // string - REQUIRED (enum: ScoreStatus.enumValues)
                  "comment": "Good work!",                        // string - OPTIONAL, nullable
                  "learningObjectiveSet": [                       // array - OPTIONAL
                    {
                      "source": "Common Core",                    // string - REQUIRED if learningObjectiveSet included
                      "learningObjectiveIds": [                   // array - REQUIRED if learningObjectiveSet included
                        {
                          "learningObjectiveId": "12345",         // string - REQUIRED
                          "score": 88,                            // number - OPTIONAL
                          "textScore": "88"                       // string - OPTIONAL
                        }
                      ]
                    }
                  ],
                  "inProgress": true,                             // boolean - OPTIONAL, nullable
                  "incomplete": false,                            // boolean - OPTIONAL, nullable
                  "late": false,                                  // boolean - OPTIONAL, nullable
                  "missing": false                                // boolean - OPTIONAL, nullable
                }
              }
              
              // Required fields: ["assessmentLineItemSourcedId", "studentSourcedId", "scoreDate", "scoreStatus"]
  /categories/{sourcedId_categories}:
    put:
      requestBody:
        content:
          application/json:
            schema:
              {
                "category": {
                  "sourcedId": "'$sourcedId_categories'",         // string - OPTIONAL
                  "status": "active",                             // string - OPTIONAL (enum: StatusType.enumValues, default: "active")
                  "dateLastModified": "2024-01-15T12:00:00Z",    // string - OPTIONAL (datetime)
                  "metadata": {                                   // object - OPTIONAL
                    "type": "category",
                    "weight": 0.5
                  },
                  "title": "Participation",                       // string - REQUIRED
                  "weight": 0.5                                   // number - OPTIONAL, nullable
                }
              }
              
              // Required fields: ["title"]
  /lineItems/{sourcedId_lineItem}:
    put:
      requestBody:
        content:
          application/json:
            schema:
              {
                "lineItems": [{
                  "sourcedId": "'$sourcedId_lineItems'",          // string - OPTIONAL
                  "status": "active",                             // string - OPTIONAL (enum: StatusType.enumValues, default: "active")
                  "dateLastModified": "2024-01-15T12:00:00Z",    // string - OPTIONAL (datetime)
                  "metadata": {                                   // object - OPTIONAL
                    "weight": "10",
                    "isExtraCredit": false
                  },
                  "title": "Homework 3: Inequalities",            // string - REQUIRED
                  "description": "Practice problems on...",       // string - OPTIONAL
                  "assignDate": "2023-09-19T00:00:00.000Z",      // string - REQUIRED (ISO date)
                  "dueDate": "2023-09-21T00:00:00.000Z",        // string - REQUIRED (ISO date)
                  "class": {                                     // object - REQUIRED
                    "sourcedId": "'$class_sourcedId'"            // string - REQUIRED
                  },
                  "school": {                                    // object - REQUIRED
                    "sourcedId": "'$school_sourcedId'"           // string - REQUIRED
                  },
                  "category": {                                  // object - REQUIRED
                    "sourcedId": "'$category_sourcedId'"         // string - REQUIRED
                  },
                  "gradingPeriod": {                            // object - OPTIONAL
                    "sourcedId": "'$gradingPeriod_sourcedId'"    // string - REQUIRED if gradingPeriod included
                  },
                  "academicSession": {                          // object - OPTIONAL
                    "sourcedId": "'$academicSession_sourcedId'"  // string - REQUIRED if academicSession included
                  },
                  "resultValueMin": 0,                          // number - OPTIONAL
                  "resultValueMax": 100,                        // number - OPTIONAL
                  "learningObjectiveSet": [                     // array - OPTIONAL
                    {
                      "source": "State Standards",              // string - REQUIRED if learningObjectiveSet included
                      "learningObjectiveIds": [                 // array - REQUIRED if learningObjectiveSet included
                        {
                          "learningObjectiveId": "MA.ALG.1",    // string - REQUIRED
                          "score": 74,                          // number - OPTIONAL
                          "textScore": "28"                     // string - OPTIONAL
                        }
                      ]
                    }
                  ]
                }]
              }
              
              // Required fields: ["title", "assignDate", "dueDate", "class", "school", "category"]
  /results/{sourcedId_results}:
    put:
      requestBody:
        content:
          application/json:
            schema:
              {
                "result": {
                  "sourcedId": "'$sourcedId_results'",           // string - OPTIONAL
                  "status": "active",                            // string - OPTIONAL (enum: StatusType.enumValues, default: "active")
                  "dateLastModified": "2024-01-15T12:00:00Z",   // string - OPTIONAL (datetime)
                  "metadata": {                                  // object - OPTIONAL
                    "test": "test"
                  },
                  "lineItem": {                                  // object - REQUIRED
                    "sourcedId": "'$lineItem_sourcedId'"         // string - REQUIRED
                  },
                  "student": {                                   // object - REQUIRED
                    "sourcedId": "'$student_sourcedId'"          // string - REQUIRED
                  },
                  "class": {                                     // object - OPTIONAL
                    "sourcedId": "'$class_sourcedId'"            // string - REQUIRED if class included
                  },
                  "scoreScale": {                               // object - OPTIONAL
                    "sourcedId": "scale123"                     // string - REQUIRED if scoreScale included
                  },
                  "scoreStatus": "fully graded",                // string - REQUIRED (enum: ScoreStatus.enumValues)
                  "score": 85,                                  // number - OPTIONAL, nullable
                  "textScore": "B+",                           // string - OPTIONAL, nullable
                  "scoreDate": "2023-09-10T00:00:00.000Z",     // string - REQUIRED (datetime)
                  "comment": "Good work!",                      // string - OPTIONAL, nullable
                  "learningObjectiveSet": [],                   // array - OPTIONAL, nullable
                  "inProgress": false,                          // boolean - OPTIONAL
                  "incomplete": false,                          // boolean - OPTIONAL
                  "late": false,                               // boolean - OPTIONAL
                  "missing": false                             // boolean - OPTIONAL
                }
              }
              
              // Required fields: ["lineItem", "student", "scoreStatus", "scoreDate"]
  /scoreScales/{sourcedId_scoreScales}:
    put:
      requestBody:
        content:
          application/json:
            schema:
              {
                "scoreScale": {
                  "sourcedId": "'$sourcedId_scoreScales'",       // string - OPTIONAL
                  "status": "active",                            // string - OPTIONAL (enum: StatusType.enumValues, default: "active")
                  "dateLastModified": "2024-01-15T12:00:00Z",   // string - OPTIONAL (datetime)
                  "metadata": {                                  // object - OPTIONAL
                    "test": "test"
                  },
                  "title": "Standard Letter Grades",             // string - REQUIRED
                  "type": "letter",                             // string - REQUIRED
                  "class": {                                    // object - REQUIRED
                    "sourcedId": "'$class_sourcedId'"           // string - REQUIRED
                  },
                  "course": {                                   // object - OPTIONAL
                    "sourcedId": "'$course_sourcedId'"          // string - REQUIRED if course included
                  },
                  "scoreScaleValue": [                          // array - REQUIRED
                    {
                      "itemValueLHS": "90",                     // string - REQUIRED
                      "itemValueRHS": "100",                    // string - REQUIRED
                      "value": "A",                             // string - OPTIONAL
                      "description": "Excellent"                // string - OPTIONAL
                    },
                    {
                      "itemValueLHS": "80",
                      "itemValueRHS": "89"
                    }
                    // ... additional scale values
                  ]
                }
              }
              
              // Required fields: ["title", "type", "class", "scoreScaleValue"]
