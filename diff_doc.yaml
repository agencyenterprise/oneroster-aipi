paths:
  /academicSessions:
    post:
      operationId: postAcademicSession
      summary: The REST create request message for the postAcademicSession() API call.
      tags:
        - AcademicSessionsManagement
      description: |
        To create a new academic session. The responding system must return the sourcedId that has been allocated to the newly created academic session record.
        If the corresponding organization cannot be located then an 'unknown' error code is returned.
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/academicsession.createpost
      requestBody:
        description: |
          The academic session record to be created in response to this request. This includes an initial assignment of sourcedId so that the mapping between this and the actually assigned sourcedId can be reported.
        content:
          application/json:
            schema:
              type: object
              properties:
                academicSession:
                  type: object
                  description: |
                    Required fields:
                    - title
                    - startDate (ISO 8601)
                    - endDate (ISO 8601)
                    - type (one of: schoolYear, term, semester, gradingPeriod)
                    - schoolYear
                    - org.sourcedId
                  properties:
                    sourcedId:
                      type: string
                      description: Optional sourcedId for academic session
                    title:
                      type: string
                      description: Required - e.g. "2023-2024 School Year"
                      example: "2023-2024 School Year"
                    startDate:
                      type: string
                      format: date-time
                      example: "2023-08-15T00:00:00.000Z"
                    endDate:
                      type: string
                      format: date-time
                      example: "2024-05-30T00:00:00.000Z"
                    type:
                      type: string
                      enum: ["schoolYear", "term", "semester", "gradingPeriod"]
                    schoolYear:
                      type: string
                      example: "2023"
                    org:
                      type: object
                      required: ["sourcedId"]
                      properties:
                        sourcedId:
                          type: string
                    class:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                    parent:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                  required:
                    - title
                    - startDate
                    - endDate
                    - type
                    - schoolYear
                    - org
        required: true

  /academicSessions/{sourcedId_academicSession}:
    put:
      operationId: putAcademicSession
      summary: The REST update request message for the putAcademicSession() API call.
      tags:
        - AcademicSessionsManagement
      parameters:
        - name: sourcedId_academicSession
          in: path
          description: The unique identifier for the academic session.
          required: true
          schema:
            type: string
          style: simple
      description: |
        To update an existing academic session. If the academic session cannot be located then an 'unknown' error code is returned.
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/academicsession.put
      requestBody:
        description: |
          The academic session record to be updated in response to this request.
        content:
          application/json:
            schema:
              type: object
              properties:
                academicSession:
                  type: object
                  description: |
                    Required fields:
                    - title
                    - startDate (ISO 8601)
                    - endDate (ISO 8601)
                    - type (one of: schoolYear, term, semester, gradingPeriod)
                    - schoolYear
                    - org.sourcedId
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: ["active", "tobedeleted"]
                      default: "active"
                    title:
                      type: string
                      example: "2023-2024 School Year"
                    startDate:
                      type: string
                      format: date-time
                      example: "2023-08-15T00:00:00.000Z"
                    endDate:
                      type: string
                      format: date-time
                      example: "2024-05-30T00:00:00.000Z"
                    type:
                      type: string
                      enum: ["schoolYear", "term", "semester", "gradingPeriod"]
                    schoolYear:
                      type: string
                      example: "2023"
                    org:
                      type: object
                      required: ["sourcedId"]
                      properties:
                        sourcedId:
                          type: string
                    class:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                    parent:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                  required:
                    - title
                    - startDate
                    - endDate
                    - type
                    - schoolYear
                    - org
        required: true

  /terms:
    post:
      operationId: postTerm
      summary: The REST create request message for the postTerm() API call.
      tags:
        - AcademicSessionsManagement
      description: |
        To create a new term. The responding system must return the sourcedId that has been allocated to the newly created term record.
        If the corresponding parent academic session or organization cannot be located then an 'unknown' error code is returned.
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/academicsession.createpost
      requestBody:
        description: |
          The term record to be created in response to this request. This includes an initial assignment of sourcedId so that the mapping between this and the actually assigned sourcedId can be reported.
        content:
          application/json:
            schema:
              type: object
              properties:
                academicSession:
                  type: object
                  description: |
                    Required fields:
                    - title
                    - type (must be "term")
                    - startDate (ISO 8601)
                    - endDate (ISO 8601)
                    - schoolYear
                    - org.sourcedId
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: ["active", "tobedeleted"]
                      default: "active"
                    title:
                      type: string
                      example: "Term 1 2024"
                    type:
                      type: string
                      enum: ["term"]
                    startDate:
                      type: string
                      format: date-time
                      example: "2024-01-15T00:00:00.000Z"
                    endDate:
                      type: string
                      format: date-time
                      example: "2024-05-30T00:00:00.000Z"
                    parent:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                    schoolYear:
                      type: string
                      example: "2024"
                    org:
                      type: object
                      required: ["sourcedId"]
                      properties:
                        sourcedId:
                          type: string
                  required:
                    - title
                    - type
                    - startDate
                    - endDate
                    - schoolYear
                    - org
        required: true

  /terms/{termSourcedId}/gradingPeriods:
    post:
      operationId: postGradingPeriodsForTerm
      summary: The REST create request message for the postGradingPeriodsForTerm() API call.
      tags:
        - AcademicSessionsManagement
      parameters:
        - name: termSourcedId
          in: path
          description: The unique identifier for the term.
          required: true
          schema:
            type: string
          style: simple
      description: |
        To create a new grading period within a term. The responding system must return the sourcedId that has been allocated to the newly created grading period record.
        If the corresponding term cannot be located then an 'unknown' error code is returned.
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/academicsession.createpost
      requestBody:
        description: |
          The grading period record to be created in response to this request.
        content:
          application/json:
            schema:
              type: object
              properties:
                academicSession:
                  type: object
                  description: |
                    Required fields:
                    - title
                    - type (must be "gradingPeriod")
                    - startDate (ISO 8601)
                    - endDate (ISO 8601)
                    - schoolYear
                    - org.sourcedId
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: ["active", "tobedeleted"]
                      default: "active"
                    title:
                      type: string
                      example: "Q1 2024"
                    type:
                      type: string
                      enum: ["gradingPeriod"]
                    startDate:
                      type: string
                      format: date-time
                      example: "2024-01-15T00:00:00.000Z"
                    endDate:
                      type: string
                      format: date-time
                      example: "2024-03-15T00:00:00.000Z"
                    parent:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                    schoolYear:
                      type: string
                      example: "2024"
                    org:
                      type: object
                      required: ["sourcedId"]
                      properties:
                        sourcedId:
                          type: string
                  required:
                    - title
                    - type
                    - startDate
                    - endDate
                    - schoolYear
                    - org
        required: true

  /classes:
    post:
      operationId: postClass
      summary: The REST create request message for the postClass() API call.
      tags:
        - ClassesManagement
      description: |
        To create a new class. The responding system must return the sourcedId that has been allocated to the newly created class record.
        If the corresponding course, organization, terms, or academic sessions cannot be located then an 'unknown' error code is returned.
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/class.createpost
      requestBody:
        description: |
          The class record to be created in response to this request. This includes an initial assignment of sourcedId so that the mapping between this and the actually assigned sourcedId can be reported.
        content:
          application/json:
            schema:
              type: object
              properties:
                class:
                  type: object
                  description: |
                    Required fields:
                    - title
                    - course.sourcedId
                    - org.sourcedId
                    - terms
                    - academicSessions (min: 1)
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: ["active", "tobedeleted"]
                      default: "active"
                    metadata:
                      type: object
                      example:
                        test: "test"
                    title:
                      type: string
                      example: "Algebra I"
                    classCode:
                      type: string
                      example: "ALG101-01"
                    classType:
                      type: string
                      enum: ["scheduled"]
                      default: "scheduled"
                    location:
                      type: string
                      example: "Room 204"
                    grades:
                      type: array
                      items:
                        type: string
                      example: ["9"]
                    subjects:
                      type: array
                      items:
                        type: string
                      example: ["Mathematics"]
                    subjectCodes:
                      type: array
                      items:
                        type: string
                      example: ["MATH"]
                    periods:
                      type: array
                      items:
                        type: string
                      example: ["1", "2"]
                    resources:
                      type: array
                      items:
                        type: object
                        required: ["sourcedId"]
                        properties:
                          sourcedId:
                            type: string
                    course:
                      type: object
                      required: ["sourcedId"]
                      properties:
                        sourcedId:
                          type: string
                    org:
                      type: object
                      required: ["sourcedId"]
                      properties:
                        sourcedId:
                          type: string
                    terms:
                      type: array
                      items:
                        type: object
                        required: ["sourcedId"]
                        properties:
                          sourcedId:
                            type: string
                    academicSessions:
                      type: array
                      minItems: 1
                      items:
                        type: object
                        properties:
                          sourcedId:
                            type: string
                  required:
                    - title
                    - course
                    - org
                    - terms
                    - academicSessions
        required: true

  /users:
    post:
      operationId: postUser
      summary: The REST create request message for the postUser() API call.
      tags:
        - UsersManagement
      description: |
        To create a new user. The responding system must return the sourcedId that has been allocated to the newly created user record.
        If the corresponding organization cannot be located then an 'unknown' error code is returned.
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/user.createpost
      requestBody:
        description: |
          The user record to be created in response to this request. This includes an initial assignment of sourcedId so that the mapping between this and the actually assigned sourcedId can be reported.
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  description: |
                    Required fields:
                    - enabledUser
                    - givenName
                    - familyName
                    - roles (min: 1, must have exactly one primary role per organization)
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: ["active", "tobedeleted"]
                      default: "active"
                    metadata:
                      type: object
                      example:
                        test: "test"
                    userMasterIdentifier:
                      type: string
                      nullable: true
                    username:
                      type: string
                    userIds:
                      type: array
                      items:
                        type: object
                        properties:
                          type:
                            type: string
                            example: "district"
                          identifier:
                            type: string
                            example: "12345"
                    enabledUser:
                      type: boolean
                    givenName:
                      type: string
                      example: "John"
                    familyName:
                      type: string
                      example: "Smith"
                    middleName:
                      type: string
                      nullable: true
                      example: "Robert"
                    roles:
                      type: array
                      minItems: 1
                      items:
                        type: object
                        required: ["roleType", "role", "org"]
                        properties:
                          roleType:
                            type: string
                            enum: ["primary"]
                          role:
                            type: string
                            enum: ["student", "teacher"]
                          org:
                            type: object
                            required: ["sourcedId"]
                            properties:
                              sourcedId:
                                type: string
                          userProfile:
                            type: string
                          beginDate:
                            type: string
                            format: date
                          endDate:
                            type: string
                            format: date
                    primaryOrg:
                      type: object
                      required: ["sourcedId"]
                      properties:
                        sourcedId:
                          type: string
                    email:
                      type: string
                      format: email
                      nullable: true
                      example: "john.smith@school.edu"
                    preferredFirstName:
                      type: string
                      nullable: true
                      example: "Johnny"
                    preferredMiddleName:
                      type: string
                      nullable: true
                      example: "Rob"
                    preferredLastName:
                      type: string
                      nullable: true
                      example: "Smithy"
                    pronouns:
                      type: string
                      nullable: true
                      example: "he/him"
                    grades:
                      type: array
                      items:
                        type: string
                      example: ["9", "10"]
                    password:
                      type: string
                      nullable: true
                    sms:
                      type: string
                      nullable: true
                      example: "+1234567890"
                    phone:
                      type: string
                      nullable: true
                      example: "+1234567890"
                    userProfiles:
                      type: array
                      items:
                        type: object
                        required: ["profileId", "profileType", "vendorId"]
                        properties:
                          profileId:
                            type: string
                            example: "profile-123"
                          profileType:
                            type: string
                            example: "academic"
                          vendorId:
                            type: string
                            example: "vendor-123"
                          applicationId:
                            type: string
                            example: "app-123"
                          description:
                            type: string
                            example: "Academic profile"
                          credentials:
                            type: array
                            items:
                              type: object
                  required:
                    - enabledUser
                    - givenName
                    - familyName
                    - roles
        required: true

  /orgs:
    post:
      operationId: postOrg
      summary: The REST create request message for the postOrg() API call.
      tags:
        - OrgsManagement
      description: |
        To create a new organization. The responding system must return the sourcedId that has been allocated to the newly created organization record.
        If the corresponding parent organization cannot be located then an 'unknown' error code is returned.
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/org.createpost
      requestBody:
        description: |
          The organization record to be created in response to this request. This includes an initial assignment of sourcedId so that the mapping between this and the actually assigned sourcedId can be reported.
        content:
          application/json:
            schema:
              type: object
              properties:
                org:
                  type: object
                  description: |
                    Required fields:
                    - name
                    - type (must be one of OrgType.enumValues)
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: ["active", "tobedeleted"]
                      default: "active"
                    metadata:
                      type: object
                      example:
                        test: "test"
                    name:
                      type: string
                      example: "District 100"
                    type:
                      type: string
                      enum: ["district", "school"]
                    identifier:
                      type: string
                      example: "D100"
                    parent:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                  required:
                    - name
                    - type
        required: true

  /schools:
    post:
      operationId: postSchool
      summary: The REST create request message for the postSchool() API call.
      tags:
        - OrgsManagement
      description: |
        To create a new school. The responding system must return the sourcedId that has been allocated to the newly created school record.
        If the corresponding parent organization cannot be located then an 'unknown' error code is returned.
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/org.createpost
      requestBody:
        description: |
          The school record to be created in response to this request. This includes an initial assignment of sourcedId so that the mapping between this and the actually assigned sourcedId can be reported.
        content:
          application/json:
            schema:
              type: object
              properties:
                org:
                  type: object
                  description: |
                    Required fields:
                    - name
                    - type (must be "school")
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: ["active", "tobedeleted"]
                      default: "active"
                    metadata:
                      type: object
                      example:
                        test: "test"
                    name:
                      type: string
                      example: "Lincoln High School"
                    type:
                      type: string
                      enum: ["school"]
                    identifier:
                      type: string
                      example: "LHS"
                    parent:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                  required:
                    - name
                    - type
        required: true

  /classes/{sourcedId_class}:
    put:
      operationId: putClass
      summary: The REST update request message for the putClass() API call.
      tags:
        - ClassesManagement
      parameters:
        - name: sourcedId_class
          in: path
          description: The unique identifier for the class.
          required: true
          schema:
            type: string
          style: simple
      description: |
        To update an existing class. If the class cannot be located then an 'unknown' error code is returned.
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/class.put
      requestBody:
        description: |
          The class record to be updated in response to this request.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClassDType"
        required: true

  /classes/{classSourcedId}/students:
    post:
      operationId: postStudentsForClass
      summary: The REST create request message for the postStudentsForClass() API call.
      tags:
        - ClassesManagement
      parameters:
        - name: classSourcedId
          in: path
          description: The unique identifier for the class.
          required: true
          schema:
            type: string
          style: simple
      description: |
        To enroll students in a class. The responding system must return the sourcedId that has been allocated to the newly created enrollment records.
        If the class cannot be located then an 'unknown' error code is returned.
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/enrollment.createpost
      requestBody:
        description: |
          The enrollment records to be created in response to this request.
        content:
          application/json:
            schema:
              type: object
              properties:
                enrollment:
                  type: object
                  description: |
                    Required fields:
                    - user.sourcedId
                    Note: role is implicitly "student" for this endpoint
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: ["active", "tobedeleted"]
                      default: "active"
                    metadata:
                      type: object
                      example:
                        test: "test"
                    role:
                      type: string
                      enum: ["student"]
                      default: "student"
                    user:
                      type: object
                      required: ["sourcedId"]
                      properties:
                        sourcedId:
                          type: string
                    primary:
                      type: boolean
                      default: false
                    beginDate:
                      type: string
                      format: date
                      example: "2024-08-26"
                    endDate:
                      type: string
                      format: date
                      example: "2025-05-15"
                  required:
                    - user
        required: true

  /classes/{classSourcedId}/teachers:
    post:
      operationId: postTeachersForClass
      summary: The REST create request message for the postTeachersForClass() API call.
      tags:
        - ClassesManagement
      parameters:
        - name: classSourcedId
          in: path
          description: The unique identifier for the class.
          required: true
          schema:
            type: string
          style: simple
      description: |
        To assign teachers to a class. The responding system must return the sourcedId that has been allocated to the newly created enrollment records.
        If the class cannot be located then an 'unknown' error code is returned.
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/enrollment.createpost
      requestBody:
        description: |
          The enrollment records to be created in response to this request.
        content:
          application/json:
            schema:
              type: object
              properties:
                enrollment:
                  type: object
                  description: |
                    Required fields:
                    - user.sourcedId
                    Note: role is implicitly "teacher" for this endpoint
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: ["active", "tobedeleted"]
                      default: "active"
                    metadata:
                      type: object
                      example:
                        test: "test"
                    role:
                      type: string
                      enum: ["teacher"]
                      default: "teacher"
                    user:
                      type: object
                      required: ["sourcedId"]
                      properties:
                        sourcedId:
                          type: string
                    primary:
                      type: boolean
                      default: false
                    beginDate:
                      type: string
                      format: date
                      example: "2024-08-26"
                    endDate:
                      type: string
                      format: date
                      example: "2025-05-15"
                  required:
                    - user
        required: true

  /courses/{sourcedId_course}:
    put:
      operationId: putCourse
      summary: The REST update request message for the putCourse() API call.
      tags:
        - CoursesManagement
      parameters:
        - name: sourcedId_course
          in: path
          description: The unique identifier for the course.
          required: true
          schema:
            type: string
          style: simple
      description: |
        To update an existing course. If the course cannot be located then an 'unknown' error code is returned.
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/course.put
      requestBody:
        description: |
          The course record to be updated in response to this request.
        content:
          application/json:
            schema:
              type: object
              properties:
                course:
                  type: object
                  description: |
                    Required fields:
                    - title
                    - org.sourcedId
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: ["active", "tobedeleted"]
                      default: "active"
                    metadata:
                      type: object
                    title:
                      type: string
                      example: "Algebra I Course"
                    courseCode:
                      type: string
                      example: "ALG101"
                    grades:
                      type: string
                      example: "9"
                    subjects:
                      type: string
                      example: "Mathematics"
                    subjectCodes:
                      type: string
                      example: "MATH"
                    org:
                      type: object
                      required: ["sourcedId"]
                      properties:
                        sourcedId:
                          type: string
                  required:
                    - title
                    - org
        required: true

  /users/{sourcedId_user}:
    put:
      operationId: putUser
      summary: The REST update request message for the putUser() API call.
      tags:
        - UsersManagement
      parameters:
        - name: sourcedId_user
          in: path
          description: The unique identifier for the user.
          required: true
          schema:
            type: string
          style: simple
      description: |
        To update an existing user. If the user cannot be located then an 'unknown' error code is returned.
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/user.put
      requestBody:
        description: |
          The user record to be updated in response to this request.
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  description: |
                    Required fields:
                    - enabledUser
                    - givenName
                    - familyName
                    - roles (min: 1, must have exactly one primary role per organization)
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: ["active", "tobedeleted"]
                      default: "active"
                    metadata:
                      type: object
                      example:
                        test: "test"
                    userMasterIdentifier:
                      type: string
                      nullable: true
                    username:
                      type: string
                    userIds:
                      type: array
                      items:
                        type: object
                        properties:
                          type:
                            type: string
                            example: "district"
                          identifier:
                            type: string
                            example: "12345"
                    enabledUser:
                      type: boolean
                    givenName:
                      type: string
                      example: "John"
                    familyName:
                      type: string
                      example: "Smith"
                    middleName:
                      type: string
                      nullable: true
                      example: "Robert"
                    roles:
                      type: array
                      minItems: 1
                      items:
                        type: object
                        required: ["roleType", "role", "org"]
                        properties:
                          roleType:
                            type: string
                            enum: ["primary"]
                          role:
                            type: string
                            enum: ["student", "teacher"]
                          org:
                            type: object
                            required: ["sourcedId"]
                            properties:
                              sourcedId:
                                type: string
                          userProfile:
                            type: string
                          beginDate:
                            type: string
                            format: date
                          endDate:
                            type: string
                            format: date
                    email:
                      type: string
                      format: email
                      nullable: true
                      example: "john.smith@school.edu"
                    grades:
                      type: array
                      items:
                        type: string
                      example: ["9", "10"]
                  required:
                    - enabledUser
                    - givenName
                    - familyName
                    - roles
        required: true

  /orgs/{sourcedId_org}:
    put:
      operationId: putOrg
      summary: The REST update request message for the putOrg() API call.
      tags:
        - OrgsManagement
      parameters:
        - name: sourcedId_org
          in: path
          description: The unique identifier for the organization.
          required: true
          schema:
            type: string
          style: simple
      description: |
        To update an existing organization. If the organization cannot be located then an 'unknown' error code is returned.
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/org.put
      requestBody:
        description: |
          The organization record to be updated in response to this request.
        content:
          application/json:
            schema:
              type: object
              properties:
                org:
                  type: object
                  description: |
                    Required fields:
                    - name
                    - type (must be one of OrgType.enumValues)
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: ["active", "tobedeleted"]
                      default: "active"
                    metadata:
                      type: object
                      example:
                        test: "test"
                    name:
                      type: string
                      example: "District 100"
                    type:
                      type: string
                      enum: ["district", "school"]
                    identifier:
                      type: string
                      example: "D100"
                    parent:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                  required:
                    - name
                    - type
        required: true

  /schools/{sourcedId_school}:
    put:
      operationId: putSchool
      summary: The REST update request message for the putSchool() API call.
      tags:
        - OrgsManagement
      parameters:
        - name: sourcedId_school
          in: path
          description: The unique identifier for the school.
          required: true
          schema:
            type: string
          style: simple
      description: |
        To update an existing school. If the school cannot be located then an 'unknown' error code is returned.
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/org.put
      requestBody:
        description: |
          The school record to be updated in response to this request.
        content:
          application/json:
            schema:
              type: object
              properties:
                org:
                  type: object
                  description: |
                    Required fields:
                    - name
                    - type (must be "school")
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: ["active", "tobedeleted"]
                      default: "active"
                    metadata:
                      type: object
                      example:
                        test: "test"
                    name:
                      type: string
                      example: "Lincoln High School"
                    type:
                      type: string
                      enum: ["school"]
                    identifier:
                      type: string
                      example: "LHS"
                    parent:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                  required:
                    - name
                    - type
        required: true

  /enrollments/{sourcedId_enrollment}:
    put:
      operationId: putEnrollment
      summary: The REST update request message for the putEnrollment() API call.
      tags:
        - EnrollmentsManagement
      parameters:
        - name: sourcedId_enrollment
          in: path
          description: The unique identifier for the enrollment.
          required: true
          schema:
            type: string
          style: simple
      description: |
        To update an existing enrollment. If the enrollment cannot be located then an 'unknown' error code is returned.
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/enrollment.put
      requestBody:
        description: |
          The enrollment record to be updated in response to this request.
        content:
          application/json:
            schema:
              type: object
              properties:
                enrollment:
                  type: object
                  description: |
                    Required fields:
                    - role
                    - user.sourcedId
                    - class.sourcedId
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: ["active", "tobedeleted"]
                      default: "active"
                    metadata:
                      type: object
                      example:
                        test: "test"
                    role:
                      type: string
                      enum: ["student", "teacher"]
                    primary:
                      type: boolean
                      default: false
                    beginDate:
                      type: string
                      format: date
                      example: "2024-08-26"
                    endDate:
                      type: string
                      format: date
                      example: "2025-05-15"
                    user:
                      type: object
                      required: ["sourcedId"]
                      properties:
                        sourcedId:
                          type: string
                    class:
                      type: object
                      required: ["sourcedId"]
                      properties:
                        sourcedId:
                          type: string
                  required:
                    - role
                    - user
                    - class
        required: true

  /gradingPeriods/{sourcedId}:
    put:
      operationId: putGradingPeriod
      summary: The REST update request message for the putGradingPeriod() API call.
      tags:
        - AcademicSessionsManagement
      parameters:
        - name: sourcedId
          in: path
          description: The unique identifier for the grading period.
          required: true
          schema:
            type: string
          style: simple
      description: |
        To update an existing grading period. If the grading period cannot be located then an 'unknown' error code is returned.
      security:
        - OAuth2CC:
            - https://purl.imsglobal.org/spec/or/v1p2/scope/academicsession.put
      requestBody:
        description: |
          The grading period record to be updated in response to this request.
        content:
          application/json:
            schema:
              type: object
              properties:
                academicSession:
                  type: object
                  description: |
                    Required fields:
                    - title
                    - type (must be "gradingPeriod")
                    - startDate (ISO 8601)
                    - endDate (ISO 8601)
                    - schoolYear
                    - org.sourcedId
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: ["active", "tobedeleted"]
                      default: "active"
                    title:
                      type: string
                      example: "Q1 2024"
                    type:
                      type: string
                      enum: ["gradingPeriod"]
                    startDate:
                      type: string
                      format: date-time
                      example: "2024-01-15T00:00:00.000Z"
                    endDate:
                      type: string
                      format: date-time
                      example: "2024-03-15T00:00:00.000Z"
                    parent:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                    schoolYear:
                      type: string
                      example: "2024"
                    org:
                      type: object
                      required: ["sourcedId"]
                      properties:
                        sourcedId:
                          type: string
                  required:
                    - title
                    - type
                    - startDate
                    - endDate
                    - schoolYear
                    - org
        required: true
